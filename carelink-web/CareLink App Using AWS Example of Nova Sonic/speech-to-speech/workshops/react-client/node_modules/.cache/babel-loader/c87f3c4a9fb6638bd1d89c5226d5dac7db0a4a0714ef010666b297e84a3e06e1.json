{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { getAllFocusables } from '../internal/components/focus-lock/utils';\nimport Tooltip from '../internal/components/tooltip';\nimport { SingleTabStopNavigationProvider, useSingleTabStopNavigation } from '../internal/context/single-tab-stop-navigation-context';\nimport { hasModifierKeys, isPlainLeftClick } from '../internal/events';\nimport useHiddenDescription from '../internal/hooks/use-hidden-description';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { KeyCode } from '../internal/keycode';\nimport { circleIndex } from '../internal/utils/circle-index';\nimport handleKey from '../internal/utils/handle-key';\nimport { hasHorizontalOverflow, hasInlineEndOverflow, hasInlineStartOverflow, onPaginationClick, scrollIntoView } from './scroll-utils';\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nimport testUtilStyles from './test-classes/styles.css.js';\nconst tabSelector = `.${styles['tabs-tab-link']}`;\nconst focusedTabSelector = `.${styles['tabs-tab-focused']}`;\nconst focusableTabSelector = `.${styles['tabs-tab-focusable']}`;\nfunction dismissButton({\n  dismissLabel,\n  dismissDisabled,\n  onDismiss,\n  tabId\n}) {\n  return React.createElement(InternalButton, {\n    onClick: onDismiss,\n    variant: \"icon\",\n    iconName: \"close\",\n    formAction: \"none\",\n    ariaLabel: dismissLabel,\n    disabled: dismissDisabled,\n    className: clsx(testUtilStyles['tab-dismiss-button'], analyticsSelectors['tab-dismiss-button']),\n    \"data-testid\": `awsui-tab-dismiss-button-${tabId}`\n  });\n}\nexport function TabHeaderBar({\n  onChange,\n  activeTabId,\n  tabs,\n  variant,\n  idNamespace,\n  ariaLabel,\n  ariaLabelledby,\n  i18nStrings,\n  keyboardActivationMode,\n  actions\n}) {\n  const headerBarRef = useRef(null);\n  const activeTabHeaderRef = useRef(null);\n  const inlineStartOverflowButton = useRef(null);\n  const i18n = useInternalI18n('tabs');\n  const isVisualRefresh = useVisualRefresh();\n  const containerObjectRef = useRef(null);\n  const [widthChange, containerMeasureRef] = useContainerQuery(rect => rect.contentBoxWidth);\n  const containerRef = useMergeRefs(containerObjectRef, containerMeasureRef);\n  const tabRefs = useRef(new Map());\n  const [horizontalOverflow, setHorizontalOverflow] = useState(false);\n  const [inlineStartOverflow, setInlineStartOverflow] = useState(false);\n  const [inlineEndOverflow, setInlineEndOverflow] = useState(false);\n  const [focusedTabId, setFocusedTabId] = useState(activeTabId);\n  const [previousActiveTabId, setPreviousActiveTabId] = useState(activeTabId);\n  const hasActionOrDismissible = tabs.some(tab => tab.action || tab.dismissible);\n  const tabActionAttributes = hasActionOrDismissible ? {\n    role: 'application',\n    'aria-roledescription': i18n('i18nStrings.tabsWithActionsAriaRoleDescription', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.tabsWithActionsAriaRoleDescription)\n  } : {\n    role: 'tablist'\n  };\n  useEffect(() => {\n    if (headerBarRef.current) {\n      setHorizontalOverflow(hasHorizontalOverflow(headerBarRef.current, inlineStartOverflowButton));\n      setInlineStartOverflow(hasInlineStartOverflow(headerBarRef.current));\n      setInlineEndOverflow(hasInlineEndOverflow(headerBarRef.current));\n    }\n  }, [widthChange, tabs]);\n  const scrollIntoViewIfPossible = smooth => {\n    if (!activeTabId) {\n      return;\n    }\n    const activeTabRef = tabRefs.current.get(activeTabId);\n    if (activeTabRef && headerBarRef.current) {\n      scrollIntoView(activeTabRef, headerBarRef.current, smooth);\n    }\n  };\n  useEffect(() => {\n    // Delay scrollIntoView as the position is depending on parent elements\n    // (effects are called inside-out in the component tree).\n    // Wait one frame to allow parents to complete it's calculation.\n    requestAnimationFrame(() => {\n      scrollIntoViewIfPossible(false);\n    });\n    // Non-smooth scrolling should not be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [horizontalOverflow, widthChange, tabs.length]);\n  useEffect(() => {\n    scrollIntoViewIfPossible(true);\n    // Smooth scrolling should only be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeTabId]);\n  useEffect(() => {\n    var _a, _b;\n    /*\n     When the selected tab changes and we are currently already focused on a tab,\n     move the focus to the newly selected tab.\n    */\n    if ((_a = headerBarRef.current) === null || _a === void 0 ? void 0 : _a.contains(document.activeElement)) {\n      if (document.activeElement !== activeTabHeaderRef.current) {\n        (_b = activeTabHeaderRef.current) === null || _b === void 0 ? void 0 : _b.focus({\n          preventScroll: true\n        });\n      }\n    }\n  }, [activeTabId]);\n  const onScroll = () => {\n    if (headerBarRef.current) {\n      setInlineStartOverflow(hasInlineStartOverflow(headerBarRef.current));\n      setInlineEndOverflow(hasInlineEndOverflow(headerBarRef.current));\n    }\n  };\n  const classes = clsx({\n    [styles['tabs-header']]: true,\n    [styles['tabs-header-with-divider']]: variant === 'default' || isVisualRefresh\n  });\n  const leftButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-left']]: true,\n    [styles['pagination-button-left-scrollable']]: inlineStartOverflow\n  });\n  const rightButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-right']]: true,\n    [styles['pagination-button-right-scrollable']]: inlineEndOverflow\n  });\n  const navigationAPI = useRef(null);\n  function getNextFocusTarget() {\n    var _a, _b;\n    if (!containerObjectRef.current) {\n      return null;\n    }\n    const tabElements = Array.from(containerObjectRef.current.querySelectorAll(tabSelector));\n    return (_b = (_a = tabElements.find(tab => tab.matches(focusedTabSelector))) !== null && _a !== void 0 ? _a : tabElements.find(tab => !tab.disabled)) !== null && _b !== void 0 ? _b : null;\n  }\n  function onUnregisterActive(focusableElement) {\n    var _a;\n    const isFocusableActionOrDismissible = !focusableElement.classList.contains(styles['tabs-tab-link']);\n    if (!isFocusableActionOrDismissible) {\n      const nextFocusTarget = (_a = navigationAPI.current) === null || _a === void 0 ? void 0 : _a.getFocusTarget();\n      const tabLinkButton = nextFocusTarget === null || nextFocusTarget === void 0 ? void 0 : nextFocusTarget.querySelector(`.${styles['tabs-tab-link']}`);\n      tabLinkButton === null || tabLinkButton === void 0 ? void 0 : tabLinkButton.focus();\n    }\n  }\n  useEffect(() => {\n    var _a;\n    (_a = navigationAPI.current) === null || _a === void 0 ? void 0 : _a.updateFocusTarget();\n  });\n  function onFocus() {\n    var _a;\n    (_a = navigationAPI.current) === null || _a === void 0 ? void 0 : _a.updateFocusTarget();\n  }\n  function onBlur() {\n    var _a;\n    (_a = navigationAPI.current) === null || _a === void 0 ? void 0 : _a.updateFocusTarget();\n  }\n  function onKeyDown(event) {\n    const focusTarget = document.activeElement;\n    const specialKeys = [KeyCode.right, KeyCode.left, KeyCode.end, KeyCode.home, KeyCode.pageUp, KeyCode.pageDown, KeyCode.space];\n    const isActionOpen = document.querySelector(`.${styles['tabs-tab-action']} [aria-expanded=\"true\"]`);\n    const isDismissOrActionFocused = !(focusTarget === null || focusTarget === void 0 ? void 0 : focusTarget.classList.contains(styles['tabs-tab-link']));\n    if (isActionOpen) {\n      return;\n    }\n    if (event.key === 'Tab' && !event.shiftKey && isDismissOrActionFocused) {\n      event.preventDefault();\n      const panelId = `${idNamespace}-${activeTabId}-panel`;\n      const panel = document.getElementById(panelId);\n      panel === null || panel === void 0 ? void 0 : panel.focus();\n    }\n    if (hasModifierKeys(event) || specialKeys.indexOf(event.keyCode) === -1) {\n      return;\n    }\n    if (!containerObjectRef.current || !focusTarget) {\n      return;\n    }\n    event.preventDefault();\n    const focusables = getFocusablesFrom(containerObjectRef.current);\n    const activeIndex = document.activeElement instanceof HTMLElement ? focusables.indexOf(document.activeElement) : -1;\n    handleKey(event, {\n      onHome: () => focusElement(focusables[0]),\n      onEnd: () => focusElement(focusables[focusables.length - 1]),\n      onInlineStart: () => focusElement(focusables[circleIndex(activeIndex - 1, [0, focusables.length - 1])]),\n      onInlineEnd: () => focusElement(focusables[circleIndex(activeIndex + 1, [0, focusables.length - 1])]),\n      onPageDown: () => inlineEndOverflow && onPaginationClick(headerBarRef, 'forward'),\n      onPageUp: () => inlineStartOverflow && onPaginationClick(headerBarRef, 'backward'),\n      onActivate: () => {\n        var _a;\n        return focusedTabId && focusedTabId !== activeTabId && onChange({\n          activeTabId: focusedTabId,\n          activeTabHref: (_a = tabs.find(tab => tab.id === focusedTabId)) === null || _a === void 0 ? void 0 : _a.href\n        });\n      }\n    });\n  }\n  function focusElement(element) {\n    var _a, _b;\n    element.focus();\n    // If focusable element is a tab - fire the onChange for it.\n    const tabsById = tabs.reduce((map, tab) => map.set(tab.id, tab), new Map());\n    for (const [tabId, focusTargetTabTriggerElement] of tabRefs.current.entries()) {\n      const focusTargetTabLabelElement = focusTargetTabTriggerElement === null || focusTargetTabTriggerElement === void 0 ? void 0 : focusTargetTabTriggerElement.querySelector(`.${styles['tabs-tab-link']}`);\n      if (tabId !== activeTabId && focusTargetTabLabelElement === element) {\n        setPreviousActiveTabId(tabId);\n        setFocusedTabId(tabId);\n        if (!((_a = tabsById.get(tabId)) === null || _a === void 0 ? void 0 : _a.disabled) && keyboardActivationMode === 'automatic') {\n          onChange({\n            activeTabId: tabId,\n            activeTabHref: (_b = tabsById.get(tabId)) === null || _b === void 0 ? void 0 : _b.href\n          });\n        }\n        break;\n      }\n    }\n  }\n  // List all non-disabled and registered focusables: those are eligible for keyboard navigation.\n  function getFocusablesFrom(target) {\n    function isElementRegistered(element) {\n      var _a, _b;\n      return (_b = (_a = navigationAPI.current) === null || _a === void 0 ? void 0 : _a.isRegistered(element)) !== null && _b !== void 0 ? _b : false;\n    }\n    function isElementFocusable(element) {\n      if (element instanceof HTMLButtonElement) {\n        return !element.disabled || element.closest(focusableTabSelector);\n      }\n      return element.matches(focusableTabSelector);\n    }\n    return getAllFocusables(target).filter(el => isElementRegistered(el) && isElementFocusable(el));\n  }\n  const TabList = hasActionOrDismissible ? 'div' : 'ul';\n  return React.createElement(\"div\", {\n    className: classes\n  }, React.createElement(\"div\", {\n    className: styles['tab-header-scroll-container'],\n    ref: containerRef\n  }, horizontalOverflow && React.createElement(\"span\", {\n    ref: inlineStartOverflowButton,\n    className: leftButtonClasses\n  }, React.createElement(InternalButton, {\n    formAction: \"none\",\n    variant: \"icon\",\n    iconName: \"angle-left\",\n    disabled: !inlineStartOverflow,\n    __focusable: true,\n    onClick: () => onPaginationClick(headerBarRef, 'backward'),\n    ariaLabel: i18n('i18nStrings.scrollLeftAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.scrollLeftAriaLabel)\n  })), React.createElement(SingleTabStopNavigationProvider, {\n    ref: navigationAPI,\n    navigationActive: true,\n    getNextFocusTarget: getNextFocusTarget,\n    onUnregisterActive: onUnregisterActive\n  }, React.createElement(TabList, Object.assign({}, tabActionAttributes, {\n    className: clsx(styles['tabs-header-list'], analyticsSelectors['tabs-header-list']),\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    ref: headerBarRef,\n    onScroll: onScroll,\n    onKeyDown: onKeyDown,\n    onFocus: onFocus,\n    onBlur: onBlur\n  }), tabs.map(renderTabHeader))), horizontalOverflow && React.createElement(\"span\", {\n    className: rightButtonClasses\n  }, React.createElement(InternalButton, {\n    formAction: \"none\",\n    variant: \"icon\",\n    iconName: \"angle-right\",\n    disabled: !inlineEndOverflow,\n    __focusable: true,\n    onClick: () => onPaginationClick(headerBarRef, 'forward'),\n    ariaLabel: i18n('i18nStrings.scrollRightAriaLabel', i18nStrings === null || i18nStrings === void 0 ? void 0 : i18nStrings.scrollRightAriaLabel)\n  }))), actions && React.createElement(\"div\", {\n    className: styles['actions-container']\n  }, actions));\n  function renderTabHeader(tab, index) {\n    const {\n      dismissible,\n      dismissLabel,\n      dismissDisabled,\n      action,\n      onDismiss\n    } = tab;\n    const isActive = activeTabId === tab.id && !tab.disabled;\n    const clickTab = event => {\n      if (tab.disabled) {\n        event.preventDefault();\n        return;\n      }\n      // if the primary mouse button is clicked with a modifier key, the browser will handle opening a new tab\n      const specialKey = !isPlainLeftClick(event);\n      if (specialKey && tab.href) {\n        return;\n      }\n      event.preventDefault();\n      // for browsers that do not focus buttons on button click\n      if (!tab.href) {\n        const clickedTabRef = tabRefs.current.get(tab.id);\n        if (clickedTabRef) {\n          if (clickedTabRef && clickedTabRef !== document.activeElement) {\n            clickedTabRef.focus({\n              preventScroll: true\n            });\n          }\n        }\n      }\n      if (tab.id === activeTabId) {\n        return;\n      }\n      setFocusedTabId(tab.id);\n      setPreviousActiveTabId(tab.id);\n      onChange({\n        activeTabId: tab.id,\n        activeTabHref: tab.href\n      });\n    };\n    const classes = clsx({\n      [styles['tabs-tab-link']]: true,\n      [styles.refresh]: isVisualRefresh,\n      [styles['tabs-tab-active']]: activeTabId === tab.id && !tab.disabled,\n      [styles['tabs-tab-focused']]: focusedTabId === tab.id,\n      [styles['tabs-tab-active']]: isActive,\n      [analyticsSelectors['active-tab-header']]: isActive,\n      [styles['tabs-tab-disabled']]: tab.disabled,\n      [styles['tabs-tab-focusable']]: !tab.disabled || tab.disabled && !!tab.disabledReason\n    });\n    const tabHeaderContainerClasses = clsx({\n      [styles['tabs-tab-header-container']]: true,\n      [styles.refresh]: isVisualRefresh,\n      [styles['tabs-tab-active']]: isActive,\n      [styles['tabs-tab-disabled']]: tab.disabled,\n      [styles['tabs-tab-focusable']]: !tab.disabled || tab.disabled && !!tab.disabledReason\n    });\n    const tabActionClasses = clsx({\n      [styles['tabs-tab-action']]: true,\n      [styles['tabs-tab-active']]: isActive\n    });\n    const commonProps = {\n      className: classes,\n      'aria-controls': `${idNamespace}-${tab.id}-panel`,\n      'data-testid': tab.id,\n      id: getTabElementId({\n        namespace: idNamespace,\n        tabId: tab.id\n      }),\n      onClick: clickTab\n    };\n    const tabHeaderContainerAriaProps = hasActionOrDismissible ? {\n      role: 'group',\n      'aria-labelledby': commonProps.id\n    } : {};\n    if (!hasActionOrDismissible) {\n      commonProps['aria-selected'] = activeTabId === tab.id;\n      commonProps.role = 'tab';\n    } else {\n      commonProps['aria-expanded'] = activeTabId === tab.id;\n    }\n    if (tab.disabled) {\n      commonProps['aria-disabled'] = 'true';\n    }\n    const setElement = tabElement => {\n      if (tab.id === activeTabId) {\n        activeTabHeaderRef.current = tabElement;\n      }\n      tabRefs.current.set(tab.id, tabElement);\n    };\n    const handleDismiss = event => {\n      if (!containerObjectRef.current || !onDismiss) {\n        return;\n      }\n      const tabElements = getFocusablesFrom(containerObjectRef.current).filter(el => el.classList.contains(styles['tabs-tab-link']));\n      const activeTabIndex = tabElements.findIndex(el => el.dataset.testid === tab.id);\n      tabElements.splice(activeTabIndex, 1);\n      let nextActive;\n      if (previousActiveTabId && previousActiveTabId !== tab.id) {\n        nextActive = tabElements.find(el => el.dataset.testid === previousActiveTabId);\n      } else {\n        nextActive = tabElements[Math.min(tabElements.length - 1, activeTabIndex)];\n      }\n      if (nextActive && nextActive.dataset.testid) {\n        onChange({\n          activeTabId: nextActive.dataset.testid\n        });\n        setPreviousActiveTabId(nextActive.dataset.testid);\n        nextActive.focus();\n      }\n      onDismiss(event);\n    };\n    const TabItem = hasActionOrDismissible ? 'div' : 'li';\n    const analyticsDismissMetadata = {\n      action: 'dismiss',\n      detail: {\n        id: tab.id,\n        label: `.${analyticsSelectors['tab-dismiss-button']}`,\n        position: `${index + 1}`\n      }\n    };\n    const analyticsComponentMetadataInnerContext = {\n      innerContext: {\n        tabId: tab.id,\n        tabLabel: `.${analyticsSelectors['tab-label']}`,\n        tabPosition: `${index + 1}`\n      }\n    };\n    return React.createElement(TabItem, {\n      ref: element => tabRefs.current.set(tab.id, element),\n      className: styles['tabs-tab'],\n      role: \"presentation\",\n      key: tab.id\n    }, React.createElement(\"div\", Object.assign({\n      className: tabHeaderContainerClasses\n    }, tabHeaderContainerAriaProps, getAnalyticsMetadataAttribute({\n      component: analyticsComponentMetadataInnerContext\n    })), React.createElement(TabTrigger, {\n      ref: setElement,\n      tab: tab,\n      elementProps: commonProps,\n      activeTabId: activeTabId,\n      index: index\n    }), action && React.createElement(\"span\", {\n      className: tabActionClasses\n    }, action), dismissible && React.createElement(\"span\", Object.assign({\n      className: styles['tabs-tab-dismiss']\n    }, getAnalyticsMetadataAttribute(analyticsDismissMetadata)), dismissButton({\n      dismissLabel,\n      dismissDisabled,\n      onDismiss: handleDismiss,\n      tabId: tab.id\n    }))));\n  }\n}\nconst TabTrigger = forwardRef(({\n  tab,\n  elementProps,\n  activeTabId,\n  index\n}, ref) => {\n  const refObject = useRef(null);\n  const tabLabelRefObject = useRef(null);\n  const mergedRef = useMergeRefs(refObject, ref);\n  const {\n    tabIndex\n  } = useSingleTabStopNavigation(refObject);\n  const isDisabledWithReason = tab.disabled && !!tab.disabledReason;\n  const [showTooltip, setShowTooltip] = useState(false);\n  const {\n    targetProps,\n    descriptionEl\n  } = useHiddenDescription(tab.disabledReason);\n  const children = React.createElement(React.Fragment, null, React.createElement(\"span\", {\n    className: clsx(styles['tabs-tab-label'], analyticsSelectors['tab-label']),\n    ref: tabLabelRefObject\n  }, React.createElement(\"span\", null, tab.label)), isDisabledWithReason && React.createElement(React.Fragment, null, descriptionEl, showTooltip && React.createElement(Tooltip, {\n    className: styles['disabled-reason-tooltip'],\n    trackRef: tabLabelRefObject,\n    value: tab.disabledReason,\n    onDismiss: () => setShowTooltip(false)\n  })));\n  const handlers = {\n    onFocus: () => setShowTooltip(true),\n    onBlur: () => setShowTooltip(false),\n    onMouseEnter: () => setShowTooltip(true),\n    onMouseLeave: () => setShowTooltip(false)\n  };\n  const analyticsSelectMetadata = {\n    action: 'select',\n    detail: {\n      id: tab.id,\n      label: `.${analyticsSelectors['tab-label']}`,\n      position: `${index + 1}`,\n      originTabId: activeTabId || ''\n    }\n  };\n  const commonProps = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, elementProps), isDisabledWithReason ? targetProps : {}), isDisabledWithReason ? handlers : {}), {\n    ref: mergedRef,\n    tabIndex: tabIndex\n  }), tab.disabled || tab.id === activeTabId ? {} : getAnalyticsMetadataAttribute(analyticsSelectMetadata));\n  return tab.href ? React.createElement(\"a\", Object.assign({}, commonProps, {\n    href: tab.href\n  }), children) : React.createElement(\"button\", Object.assign({}, commonProps, {\n    type: \"button\",\n    disabled: tab.disabled && !isDisabledWithReason\n  }), children);\n});\nexport function getTabElementId({\n  namespace,\n  tabId\n}) {\n  return namespace + '-' + tabId;\n}","map":{"version":3,"names":["React","forwardRef","useEffect","useRef","useState","clsx","useContainerQuery","getAnalyticsMetadataAttribute","InternalButton","useInternalI18n","getAllFocusables","Tooltip","SingleTabStopNavigationProvider","useSingleTabStopNavigation","hasModifierKeys","isPlainLeftClick","useHiddenDescription","useMergeRefs","useVisualRefresh","KeyCode","circleIndex","handleKey","hasHorizontalOverflow","hasInlineEndOverflow","hasInlineStartOverflow","onPaginationClick","scrollIntoView","analyticsSelectors","styles","testUtilStyles","tabSelector","focusedTabSelector","focusableTabSelector","dismissButton","dismissLabel","dismissDisabled","onDismiss","tabId","createElement","onClick","variant","iconName","formAction","ariaLabel","disabled","className","TabHeaderBar","onChange","activeTabId","tabs","idNamespace","ariaLabelledby","i18nStrings","keyboardActivationMode","actions","headerBarRef","activeTabHeaderRef","inlineStartOverflowButton","i18n","isVisualRefresh","containerObjectRef","widthChange","containerMeasureRef","rect","contentBoxWidth","containerRef","tabRefs","Map","horizontalOverflow","setHorizontalOverflow","inlineStartOverflow","setInlineStartOverflow","inlineEndOverflow","setInlineEndOverflow","focusedTabId","setFocusedTabId","previousActiveTabId","setPreviousActiveTabId","hasActionOrDismissible","some","tab","action","dismissible","tabActionAttributes","role","tabsWithActionsAriaRoleDescription","current","scrollIntoViewIfPossible","smooth","activeTabRef","get","requestAnimationFrame","length","_a","contains","document","activeElement","_b","focus","preventScroll","onScroll","classes","leftButtonClasses","rightButtonClasses","navigationAPI","getNextFocusTarget","tabElements","Array","from","querySelectorAll","find","matches","onUnregisterActive","focusableElement","isFocusableActionOrDismissible","classList","nextFocusTarget","getFocusTarget","tabLinkButton","querySelector","updateFocusTarget","onFocus","onBlur","onKeyDown","event","focusTarget","specialKeys","right","left","end","home","pageUp","pageDown","space","isActionOpen","isDismissOrActionFocused","key","shiftKey","preventDefault","panelId","panel","getElementById","indexOf","keyCode","focusables","getFocusablesFrom","activeIndex","HTMLElement","onHome","focusElement","onEnd","onInlineStart","onInlineEnd","onPageDown","onPageUp","onActivate","activeTabHref","id","href","element","tabsById","reduce","map","set","focusTargetTabTriggerElement","entries","focusTargetTabLabelElement","target","isElementRegistered","isRegistered","isElementFocusable","HTMLButtonElement","closest","filter","el","TabList","ref","__focusable","scrollLeftAriaLabel","navigationActive","Object","assign","renderTabHeader","scrollRightAriaLabel","index","isActive","clickTab","specialKey","clickedTabRef","refresh","disabledReason","tabHeaderContainerClasses","tabActionClasses","commonProps","getTabElementId","namespace","tabHeaderContainerAriaProps","setElement","tabElement","handleDismiss","activeTabIndex","findIndex","dataset","testid","splice","nextActive","Math","min","TabItem","analyticsDismissMetadata","detail","label","position","analyticsComponentMetadataInnerContext","innerContext","tabLabel","tabPosition","component","TabTrigger","elementProps","refObject","tabLabelRefObject","mergedRef","tabIndex","isDisabledWithReason","showTooltip","setShowTooltip","targetProps","descriptionEl","children","Fragment","trackRef","value","handlers","onMouseEnter","onMouseLeave","analyticsSelectMetadata","originTabId","type"],"sources":["/Users/jonathanfox/Desktop/amazon-nova-samples/speech-to-speech/workshops/react-client/node_modules/src/tabs/tab-header-bar.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport { ButtonProps } from '../button/interfaces';\nimport { InternalButton } from '../button/internal';\nimport { useInternalI18n } from '../i18n/context';\nimport { getAllFocusables } from '../internal/components/focus-lock/utils';\nimport Tooltip from '../internal/components/tooltip';\nimport {\n  SingleTabStopNavigationAPI,\n  SingleTabStopNavigationProvider,\n  useSingleTabStopNavigation,\n} from '../internal/context/single-tab-stop-navigation-context';\nimport { hasModifierKeys, isPlainLeftClick } from '../internal/events';\nimport useHiddenDescription from '../internal/hooks/use-hidden-description';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { KeyCode } from '../internal/keycode';\nimport { circleIndex } from '../internal/utils/circle-index';\nimport handleKey from '../internal/utils/handle-key';\nimport {\n  GeneratedAnalyticsMetadataTabsComponent,\n  GeneratedAnalyticsMetadataTabsDismiss,\n  GeneratedAnalyticsMetadataTabsSelect,\n} from './analytics-metadata/interfaces';\nimport { TabsProps } from './interfaces';\nimport {\n  hasHorizontalOverflow,\n  hasInlineEndOverflow,\n  hasInlineStartOverflow,\n  onPaginationClick,\n  scrollIntoView,\n} from './scroll-utils';\n\nimport analyticsSelectors from './analytics-metadata/styles.css.js';\nimport styles from './styles.css.js';\nimport testUtilStyles from './test-classes/styles.css.js';\n\nconst tabSelector = `.${styles['tabs-tab-link']}`;\nconst focusedTabSelector = `.${styles['tabs-tab-focused']}`;\nconst focusableTabSelector = `.${styles['tabs-tab-focusable']}`;\n\nfunction dismissButton({\n  dismissLabel,\n  dismissDisabled,\n  onDismiss,\n  tabId,\n}: {\n  dismissLabel?: string;\n  dismissDisabled?: boolean;\n  onDismiss: ButtonProps['onClick'];\n  tabId: string;\n}) {\n  return (\n    <InternalButton\n      onClick={onDismiss}\n      variant=\"icon\"\n      iconName=\"close\"\n      formAction=\"none\"\n      ariaLabel={dismissLabel}\n      disabled={dismissDisabled}\n      className={clsx(testUtilStyles['tab-dismiss-button'], analyticsSelectors['tab-dismiss-button'])}\n      data-testid={`awsui-tab-dismiss-button-${tabId}`}\n    />\n  );\n}\n\ninterface TabHeaderBarProps {\n  onChange: (changeDetail: TabsProps.ChangeDetail) => void;\n  activeTabId: TabsProps['activeTabId'];\n  tabs: TabsProps['tabs'];\n  variant: TabsProps['variant'];\n  idNamespace: string;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  i18nStrings?: TabsProps.I18nStrings;\n  keyboardActivationMode: Required<TabsProps['keyboardActivationMode']>;\n  actions?: TabsProps['actions'];\n}\n\nexport function TabHeaderBar({\n  onChange,\n  activeTabId,\n  tabs,\n  variant,\n  idNamespace,\n  ariaLabel,\n  ariaLabelledby,\n  i18nStrings,\n  keyboardActivationMode,\n  actions,\n}: TabHeaderBarProps) {\n  const headerBarRef = useRef<HTMLUListElement>(null);\n  const activeTabHeaderRef = useRef<null | HTMLElement>(null);\n  const inlineStartOverflowButton = useRef<HTMLElement>(null);\n  const i18n = useInternalI18n('tabs');\n\n  const isVisualRefresh = useVisualRefresh();\n\n  const containerObjectRef = useRef<HTMLDivElement>(null);\n  const [widthChange, containerMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n  const containerRef = useMergeRefs(containerObjectRef, containerMeasureRef);\n  const tabRefs = useRef<Map<string, HTMLElement>>(new Map());\n  const [horizontalOverflow, setHorizontalOverflow] = useState(false);\n  const [inlineStartOverflow, setInlineStartOverflow] = useState(false);\n  const [inlineEndOverflow, setInlineEndOverflow] = useState(false);\n  const [focusedTabId, setFocusedTabId] = useState(activeTabId);\n  const [previousActiveTabId, setPreviousActiveTabId] = useState<string | undefined>(activeTabId);\n  const hasActionOrDismissible = tabs.some(tab => tab.action || tab.dismissible);\n  const tabActionAttributes = hasActionOrDismissible\n    ? {\n        role: 'application',\n        'aria-roledescription': i18n(\n          'i18nStrings.tabsWithActionsAriaRoleDescription',\n          i18nStrings?.tabsWithActionsAriaRoleDescription\n        ),\n      }\n    : {\n        role: 'tablist',\n      };\n\n  useEffect(() => {\n    if (headerBarRef.current) {\n      setHorizontalOverflow(hasHorizontalOverflow(headerBarRef.current, inlineStartOverflowButton));\n      setInlineStartOverflow(hasInlineStartOverflow(headerBarRef.current));\n      setInlineEndOverflow(hasInlineEndOverflow(headerBarRef.current));\n    }\n  }, [widthChange, tabs]);\n\n  const scrollIntoViewIfPossible = (smooth: boolean) => {\n    if (!activeTabId) {\n      return;\n    }\n    const activeTabRef = tabRefs.current.get(activeTabId);\n    if (activeTabRef && headerBarRef.current) {\n      scrollIntoView(activeTabRef, headerBarRef.current, smooth);\n    }\n  };\n\n  useEffect(() => {\n    // Delay scrollIntoView as the position is depending on parent elements\n    // (effects are called inside-out in the component tree).\n    // Wait one frame to allow parents to complete it's calculation.\n    requestAnimationFrame(() => {\n      scrollIntoViewIfPossible(false);\n    });\n    // Non-smooth scrolling should not be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [horizontalOverflow, widthChange, tabs.length]);\n\n  useEffect(() => {\n    scrollIntoViewIfPossible(true);\n    // Smooth scrolling should only be called upon activeId change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeTabId]);\n\n  useEffect(() => {\n    /*\n     When the selected tab changes and we are currently already focused on a tab,\n     move the focus to the newly selected tab.\n    */\n    if (headerBarRef.current?.contains(document.activeElement)) {\n      if (document.activeElement !== activeTabHeaderRef.current) {\n        activeTabHeaderRef.current?.focus({ preventScroll: true });\n      }\n    }\n  }, [activeTabId]);\n\n  const onScroll = () => {\n    if (headerBarRef.current) {\n      setInlineStartOverflow(hasInlineStartOverflow(headerBarRef.current));\n      setInlineEndOverflow(hasInlineEndOverflow(headerBarRef.current));\n    }\n  };\n\n  const classes = clsx({\n    [styles['tabs-header']]: true,\n    [styles['tabs-header-with-divider']]: variant === 'default' || isVisualRefresh,\n  });\n\n  const leftButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-left']]: true,\n    [styles['pagination-button-left-scrollable']]: inlineStartOverflow,\n  });\n\n  const rightButtonClasses = clsx({\n    [styles['pagination-button']]: true,\n    [styles['pagination-button-right']]: true,\n    [styles['pagination-button-right-scrollable']]: inlineEndOverflow,\n  });\n\n  const navigationAPI = useRef<SingleTabStopNavigationAPI>(null);\n\n  function getNextFocusTarget(): null | HTMLElement {\n    if (!containerObjectRef.current) {\n      return null;\n    }\n    const tabElements: HTMLButtonElement[] = Array.from(containerObjectRef.current.querySelectorAll(tabSelector));\n    return tabElements.find(tab => tab.matches(focusedTabSelector)) ?? tabElements.find(tab => !tab.disabled) ?? null;\n  }\n\n  function onUnregisterActive(focusableElement: HTMLElement) {\n    const isFocusableActionOrDismissible = !focusableElement.classList.contains(styles['tabs-tab-link']);\n    if (!isFocusableActionOrDismissible) {\n      const nextFocusTarget = navigationAPI.current?.getFocusTarget();\n      const tabLinkButton = nextFocusTarget?.querySelector(`.${styles['tabs-tab-link']}`) as HTMLElement;\n      tabLinkButton?.focus();\n    }\n  }\n\n  useEffect(() => {\n    navigationAPI.current?.updateFocusTarget();\n  });\n  function onFocus() {\n    navigationAPI.current?.updateFocusTarget();\n  }\n  function onBlur() {\n    navigationAPI.current?.updateFocusTarget();\n  }\n\n  function onKeyDown(event: React.KeyboardEvent) {\n    const focusTarget = document.activeElement;\n    const specialKeys = [\n      KeyCode.right,\n      KeyCode.left,\n      KeyCode.end,\n      KeyCode.home,\n      KeyCode.pageUp,\n      KeyCode.pageDown,\n      KeyCode.space,\n    ];\n    const isActionOpen = document.querySelector(`.${styles['tabs-tab-action']} [aria-expanded=\"true\"]`);\n    const isDismissOrActionFocused = !focusTarget?.classList.contains(styles['tabs-tab-link']);\n\n    if (isActionOpen) {\n      return;\n    }\n    if (event.key === 'Tab' && !event.shiftKey && isDismissOrActionFocused) {\n      event.preventDefault();\n      const panelId = `${idNamespace}-${activeTabId}-panel`;\n      const panel = document.getElementById(panelId);\n      panel?.focus();\n    }\n    if (hasModifierKeys(event) || specialKeys.indexOf(event.keyCode) === -1) {\n      return;\n    }\n    if (!containerObjectRef.current || !focusTarget) {\n      return;\n    }\n    event.preventDefault();\n\n    const focusables = getFocusablesFrom(containerObjectRef.current);\n    const activeIndex = document.activeElement instanceof HTMLElement ? focusables.indexOf(document.activeElement) : -1;\n    handleKey(event as any, {\n      onHome: () => focusElement(focusables[0]),\n      onEnd: () => focusElement(focusables[focusables.length - 1]),\n      onInlineStart: () => focusElement(focusables[circleIndex(activeIndex - 1, [0, focusables.length - 1])]),\n      onInlineEnd: () => focusElement(focusables[circleIndex(activeIndex + 1, [0, focusables.length - 1])]),\n      onPageDown: () => inlineEndOverflow && onPaginationClick(headerBarRef, 'forward'),\n      onPageUp: () => inlineStartOverflow && onPaginationClick(headerBarRef, 'backward'),\n      onActivate: () =>\n        focusedTabId &&\n        focusedTabId !== activeTabId &&\n        onChange({ activeTabId: focusedTabId, activeTabHref: tabs.find(tab => tab.id === focusedTabId)?.href }),\n    });\n  }\n  function focusElement(element: HTMLElement) {\n    element.focus();\n    // If focusable element is a tab - fire the onChange for it.\n    const tabsById = tabs.reduce((map, tab) => map.set(tab.id, tab), new Map<string, TabsProps.Tab>());\n    for (const [tabId, focusTargetTabTriggerElement] of tabRefs.current.entries()) {\n      const focusTargetTabLabelElement = focusTargetTabTriggerElement?.querySelector(`.${styles['tabs-tab-link']}`);\n      if (tabId !== activeTabId && focusTargetTabLabelElement === element) {\n        setPreviousActiveTabId(tabId);\n        setFocusedTabId(tabId);\n\n        if (!tabsById.get(tabId)?.disabled && keyboardActivationMode === 'automatic') {\n          onChange({ activeTabId: tabId, activeTabHref: tabsById.get(tabId)?.href });\n        }\n        break;\n      }\n    }\n  }\n  // List all non-disabled and registered focusables: those are eligible for keyboard navigation.\n  function getFocusablesFrom(target: HTMLElement) {\n    function isElementRegistered(element: HTMLElement) {\n      return navigationAPI.current?.isRegistered(element) ?? false;\n    }\n    function isElementFocusable(element: HTMLElement) {\n      if (element instanceof HTMLButtonElement) {\n        return !element.disabled || element.closest(focusableTabSelector);\n      }\n\n      return element.matches(focusableTabSelector);\n    }\n    return getAllFocusables(target).filter(el => isElementRegistered(el) && isElementFocusable(el));\n  }\n\n  const TabList = hasActionOrDismissible ? 'div' : 'ul';\n\n  return (\n    <div className={classes}>\n      <div className={styles['tab-header-scroll-container']} ref={containerRef}>\n        {horizontalOverflow && (\n          <span ref={inlineStartOverflowButton} className={leftButtonClasses}>\n            <InternalButton\n              formAction=\"none\"\n              variant=\"icon\"\n              iconName=\"angle-left\"\n              disabled={!inlineStartOverflow}\n              __focusable={true}\n              onClick={() => onPaginationClick(headerBarRef, 'backward')}\n              ariaLabel={i18n('i18nStrings.scrollLeftAriaLabel', i18nStrings?.scrollLeftAriaLabel)}\n            />\n          </span>\n        )}\n        <SingleTabStopNavigationProvider\n          ref={navigationAPI}\n          navigationActive={true}\n          getNextFocusTarget={getNextFocusTarget}\n          onUnregisterActive={onUnregisterActive}\n        >\n          <TabList\n            {...tabActionAttributes}\n            className={clsx(styles['tabs-header-list'], analyticsSelectors['tabs-header-list'])}\n            aria-label={ariaLabel}\n            aria-labelledby={ariaLabelledby}\n            ref={headerBarRef as never}\n            onScroll={onScroll}\n            onKeyDown={onKeyDown}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          >\n            {tabs.map(renderTabHeader)}\n          </TabList>\n        </SingleTabStopNavigationProvider>\n        {horizontalOverflow && (\n          <span className={rightButtonClasses}>\n            <InternalButton\n              formAction=\"none\"\n              variant=\"icon\"\n              iconName=\"angle-right\"\n              disabled={!inlineEndOverflow}\n              __focusable={true}\n              onClick={() => onPaginationClick(headerBarRef, 'forward')}\n              ariaLabel={i18n('i18nStrings.scrollRightAriaLabel', i18nStrings?.scrollRightAriaLabel)}\n            />\n          </span>\n        )}\n      </div>\n      {actions && <div className={styles['actions-container']}>{actions}</div>}\n    </div>\n  );\n\n  function renderTabHeader(tab: TabsProps.Tab, index: number) {\n    const { dismissible, dismissLabel, dismissDisabled, action, onDismiss } = tab;\n    const isActive = activeTabId === tab.id && !tab.disabled;\n\n    const clickTab = (event: React.MouseEvent) => {\n      if (tab.disabled) {\n        event.preventDefault();\n        return;\n      }\n\n      // if the primary mouse button is clicked with a modifier key, the browser will handle opening a new tab\n      const specialKey = !isPlainLeftClick(event);\n      if (specialKey && tab.href) {\n        return;\n      }\n\n      event.preventDefault();\n      // for browsers that do not focus buttons on button click\n      if (!tab.href) {\n        const clickedTabRef = tabRefs.current.get(tab.id) as undefined | HTMLButtonElement;\n        if (clickedTabRef) {\n          if (clickedTabRef && clickedTabRef !== document.activeElement) {\n            clickedTabRef.focus({ preventScroll: true });\n          }\n        }\n      }\n\n      if (tab.id === activeTabId) {\n        return;\n      }\n\n      setFocusedTabId(tab.id);\n      setPreviousActiveTabId(tab.id);\n      onChange({ activeTabId: tab.id, activeTabHref: tab.href });\n    };\n\n    const classes = clsx({\n      [styles['tabs-tab-link']]: true,\n      [styles.refresh]: isVisualRefresh,\n      [styles['tabs-tab-active']]: activeTabId === tab.id && !tab.disabled,\n      [styles['tabs-tab-focused']]: focusedTabId === tab.id,\n      [styles['tabs-tab-active']]: isActive,\n      [analyticsSelectors['active-tab-header']]: isActive,\n      [styles['tabs-tab-disabled']]: tab.disabled,\n      [styles['tabs-tab-focusable']]: !tab.disabled || (tab.disabled && !!tab.disabledReason),\n    });\n\n    const tabHeaderContainerClasses = clsx({\n      [styles['tabs-tab-header-container']]: true,\n      [styles.refresh]: isVisualRefresh,\n      [styles['tabs-tab-active']]: isActive,\n      [styles['tabs-tab-disabled']]: tab.disabled,\n      [styles['tabs-tab-focusable']]: !tab.disabled || (tab.disabled && !!tab.disabledReason),\n    });\n\n    const tabActionClasses = clsx({\n      [styles['tabs-tab-action']]: true,\n      [styles['tabs-tab-active']]: isActive,\n    });\n\n    const commonProps: (JSX.IntrinsicElements['a'] | JSX.IntrinsicElements['button']) & { 'data-testid': string } = {\n      className: classes,\n      'aria-controls': `${idNamespace}-${tab.id}-panel`,\n      'data-testid': tab.id,\n      id: getTabElementId({ namespace: idNamespace, tabId: tab.id }),\n      onClick: clickTab,\n    };\n\n    const tabHeaderContainerAriaProps = hasActionOrDismissible\n      ? {\n          role: 'group',\n          'aria-labelledby': commonProps.id,\n        }\n      : {};\n\n    if (!hasActionOrDismissible) {\n      commonProps['aria-selected'] = activeTabId === tab.id;\n      commonProps.role = 'tab';\n    } else {\n      commonProps['aria-expanded'] = activeTabId === tab.id;\n    }\n\n    if (tab.disabled) {\n      commonProps['aria-disabled'] = 'true';\n    }\n\n    const setElement = (tabElement: null | HTMLElement) => {\n      if (tab.id === activeTabId) {\n        activeTabHeaderRef.current = tabElement;\n      }\n      tabRefs.current.set(tab.id, tabElement as HTMLElement);\n    };\n\n    const handleDismiss: ButtonProps['onClick'] = event => {\n      if (!containerObjectRef.current || !onDismiss) {\n        return;\n      }\n      const tabElements = getFocusablesFrom(containerObjectRef.current).filter(el =>\n        el.classList.contains(styles['tabs-tab-link'])\n      );\n      const activeTabIndex = tabElements.findIndex(el => el.dataset.testid === tab.id);\n      tabElements.splice(activeTabIndex, 1);\n      let nextActive: HTMLElement | undefined;\n      if (previousActiveTabId && previousActiveTabId !== tab.id) {\n        nextActive = tabElements.find(el => el.dataset.testid === previousActiveTabId);\n      } else {\n        nextActive = tabElements[Math.min(tabElements.length - 1, activeTabIndex)];\n      }\n      if (nextActive && nextActive.dataset.testid) {\n        onChange({ activeTabId: nextActive.dataset.testid });\n        setPreviousActiveTabId(nextActive.dataset.testid);\n        nextActive.focus();\n      }\n      onDismiss(event);\n    };\n\n    const TabItem = hasActionOrDismissible ? 'div' : 'li';\n\n    const analyticsDismissMetadata: GeneratedAnalyticsMetadataTabsDismiss = {\n      action: 'dismiss',\n      detail: {\n        id: tab.id,\n        label: `.${analyticsSelectors['tab-dismiss-button']}`,\n        position: `${index + 1}`,\n      },\n    };\n\n    const analyticsComponentMetadataInnerContext: Partial<GeneratedAnalyticsMetadataTabsComponent> = {\n      innerContext: {\n        tabId: tab.id,\n        tabLabel: `.${analyticsSelectors['tab-label']}`,\n        tabPosition: `${index + 1}`,\n      },\n    };\n\n    return (\n      <TabItem\n        ref={(element: any) => tabRefs.current.set(tab.id, element as HTMLElement)}\n        className={styles['tabs-tab']}\n        role=\"presentation\"\n        key={tab.id}\n      >\n        <div\n          className={tabHeaderContainerClasses}\n          {...tabHeaderContainerAriaProps}\n          {...getAnalyticsMetadataAttribute({ component: analyticsComponentMetadataInnerContext })}\n        >\n          <TabTrigger ref={setElement} tab={tab} elementProps={commonProps} activeTabId={activeTabId} index={index} />\n          {action && <span className={tabActionClasses}>{action}</span>}\n          {dismissible && (\n            <span className={styles['tabs-tab-dismiss']} {...getAnalyticsMetadataAttribute(analyticsDismissMetadata)}>\n              {dismissButton({ dismissLabel, dismissDisabled, onDismiss: handleDismiss, tabId: tab.id })}\n            </span>\n          )}\n        </div>\n      </TabItem>\n    );\n  }\n}\n\ninterface TabTriggerProps {\n  tab: TabsProps.Tab;\n  elementProps: React.HTMLAttributes<HTMLAnchorElement | HTMLButtonElement>;\n  activeTabId?: string;\n  index: number;\n}\nconst TabTrigger = forwardRef(\n  ({ tab, elementProps, activeTabId, index }: TabTriggerProps, ref: React.Ref<HTMLElement>) => {\n    const refObject = useRef<HTMLElement>(null);\n    const tabLabelRefObject = useRef<HTMLElement>(null);\n    const mergedRef = useMergeRefs(refObject, ref);\n    const { tabIndex } = useSingleTabStopNavigation(refObject);\n    const isDisabledWithReason = tab.disabled && !!tab.disabledReason;\n    const [showTooltip, setShowTooltip] = useState(false);\n    const { targetProps, descriptionEl } = useHiddenDescription(tab.disabledReason);\n    const children = (\n      <>\n        <span className={clsx(styles['tabs-tab-label'], analyticsSelectors['tab-label'])} ref={tabLabelRefObject}>\n          {/* The label is wrapped with span so that whitespaces inside don't get trimmed. */}\n          <span>{tab.label}</span>\n        </span>\n        {isDisabledWithReason && (\n          <>\n            {descriptionEl}\n            {showTooltip && (\n              <Tooltip\n                className={styles['disabled-reason-tooltip']}\n                trackRef={tabLabelRefObject}\n                value={tab.disabledReason!}\n                onDismiss={() => setShowTooltip(false)}\n              />\n            )}\n          </>\n        )}\n      </>\n    );\n\n    const handlers = {\n      onFocus: () => setShowTooltip(true),\n      onBlur: () => setShowTooltip(false),\n      onMouseEnter: () => setShowTooltip(true),\n      onMouseLeave: () => setShowTooltip(false),\n    };\n\n    const analyticsSelectMetadata: GeneratedAnalyticsMetadataTabsSelect = {\n      action: 'select',\n      detail: {\n        id: tab.id,\n        label: `.${analyticsSelectors['tab-label']}`,\n        position: `${index + 1}`,\n        originTabId: activeTabId || '',\n      },\n    };\n\n    const commonProps = {\n      ...elementProps,\n      ...(isDisabledWithReason ? targetProps : {}),\n      ...(isDisabledWithReason ? handlers : {}),\n      ref: mergedRef,\n      tabIndex: tabIndex,\n      ...(tab.disabled || tab.id === activeTabId ? {} : getAnalyticsMetadataAttribute(analyticsSelectMetadata)),\n    };\n\n    return tab.href ? (\n      <a {...commonProps} href={tab.href}>\n        {children}\n      </a>\n    ) : (\n      <button {...commonProps} type=\"button\" disabled={tab.disabled && !isDisabledWithReason}>\n        {children}\n      </button>\n    );\n  }\n);\n\nexport function getTabElementId({ namespace, tabId }: { namespace: string; tabId: string }) {\n  return namespace + '-' + tabId;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}