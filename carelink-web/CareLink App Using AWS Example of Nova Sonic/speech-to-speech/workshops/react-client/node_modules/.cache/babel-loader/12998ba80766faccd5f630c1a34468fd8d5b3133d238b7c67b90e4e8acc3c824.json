{"ast":null,"code":"import { __rest } from \"tslib\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { getAnalyticsMetadataAttribute } from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\nimport InternalContainer from '../container/internal';\nimport { useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { getAnalyticsMetadataProps, getBaseProps } from '../internal/base-component';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport { TableComponentsContextProvider } from '../internal/context/table-component-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { usePerformanceMarks } from '../internal/hooks/use-performance-marks';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useScrollSync } from '../internal/hooks/use-scroll-sync';\nimport { useTableInteractionMetrics } from '../internal/hooks/use-table-interaction-metrics';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { isDevelopment } from '../internal/is-development';\nimport InternalLiveRegion from '../live-region/internal';\nimport { TableBodyCell } from './body-cell';\nimport { checkColumnWidths } from './column-widths-utils';\nimport { useExpandableTableProps } from './expandable-rows/expandable-rows-utils';\nimport { NoDataCell } from './no-data-cell';\nimport { getLoaderContent } from './progressive-loading/items-loader';\nimport { TableLoaderCell } from './progressive-loading/loader-cell';\nimport { useProgressiveLoadingProps } from './progressive-loading/progressive-loading-utils';\nimport { ResizeTracker } from './resizer';\nimport { focusMarkers, useSelection, useSelectionFocusMove } from './selection';\nimport { TableBodySelectionCell } from './selection/selection-cell';\nimport { useStickyColumns } from './sticky-columns';\nimport StickyHeader from './sticky-header';\nimport { StickyScrollbar } from './sticky-scrollbar';\nimport { getTableRoleProps, getTableRowRoleProps, getTableWrapperRoleProps, GridNavigationProvider } from './table-role';\nimport Thead from './thead';\nimport ToolsHeader from './tools-header';\nimport { useCellEditing } from './use-cell-editing';\nimport { ColumnWidthsProvider, DEFAULT_COLUMN_WIDTH } from './use-column-widths';\nimport { usePreventStickyClickScroll } from './use-prevent-sticky-click-scroll';\nimport { useRowEvents } from './use-row-events';\nimport useTableFocusNavigation from './use-table-focus-navigation';\nimport { checkSortingState, getColumnKey, getItemKey, getVisibleColumnDefinitions, toContainerVariant } from './utils';\nimport buttonStyles from '../button/styles.css.js';\nimport headerStyles from '../header/styles.css.js';\nimport styles from './styles.css.js';\nconst GRID_NAVIGATION_PAGE_SIZE = 10;\nconst SELECTION_COLUMN_WIDTH = 54;\nconst selectionColumnId = Symbol('selection-column-id');\nexport const InternalTableAsSubstep = React.forwardRef((props, ref) => {\n  const {\n    funnelSubStepProps\n  } = useFunnelSubStep();\n  const tableProps = Object.assign(Object.assign({}, props), {\n    __funnelSubStepProps: funnelSubStepProps\n  });\n  return React.createElement(InternalTable, Object.assign({}, tableProps, {\n    ref: ref\n  }));\n});\nconst InternalTable = React.forwardRef((_a, ref) => {\n  var _b, _c, _d;\n  var {\n      header,\n      footer,\n      empty,\n      filter,\n      pagination,\n      preferences,\n      items,\n      columnDefinitions,\n      trackBy,\n      loading,\n      loadingText,\n      selectionType,\n      selectedItems,\n      isItemDisabled,\n      ariaLabels,\n      onSelectionChange,\n      onSortingChange,\n      sortingColumn,\n      sortingDescending,\n      sortingDisabled,\n      visibleColumns,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      onRowClick,\n      onRowContextMenu,\n      wrapLines,\n      stripedRows,\n      contentDensity,\n      submitEdit,\n      onEditCancel,\n      resizableColumns,\n      onColumnWidthsChange,\n      variant,\n      __internalRootRef,\n      totalItemsCount,\n      firstIndex,\n      renderAriaLive,\n      stickyColumns,\n      columnDisplay,\n      enableKeyboardNavigation,\n      expandableRows,\n      getLoadingStatus,\n      renderLoaderPending,\n      renderLoaderLoading,\n      renderLoaderError,\n      renderLoaderEmpty,\n      cellVerticalAlign,\n      __funnelSubStepProps\n    } = _a,\n    rest = __rest(_a, [\"header\", \"footer\", \"empty\", \"filter\", \"pagination\", \"preferences\", \"items\", \"columnDefinitions\", \"trackBy\", \"loading\", \"loadingText\", \"selectionType\", \"selectedItems\", \"isItemDisabled\", \"ariaLabels\", \"onSelectionChange\", \"onSortingChange\", \"sortingColumn\", \"sortingDescending\", \"sortingDisabled\", \"visibleColumns\", \"stickyHeader\", \"stickyHeaderVerticalOffset\", \"onRowClick\", \"onRowContextMenu\", \"wrapLines\", \"stripedRows\", \"contentDensity\", \"submitEdit\", \"onEditCancel\", \"resizableColumns\", \"onColumnWidthsChange\", \"variant\", \"__internalRootRef\", \"totalItemsCount\", \"firstIndex\", \"renderAriaLive\", \"stickyColumns\", \"columnDisplay\", \"enableKeyboardNavigation\", \"expandableRows\", \"getLoadingStatus\", \"renderLoaderPending\", \"renderLoaderLoading\", \"renderLoaderError\", \"renderLoaderEmpty\", \"cellVerticalAlign\", \"__funnelSubStepProps\"]);\n  // Keyboard navigation defaults to `true` for tables with expandable rows.\n  if (expandableRows && enableKeyboardNavigation === undefined) {\n    enableKeyboardNavigation = true;\n  }\n  const baseProps = getBaseProps(rest);\n  const prevStickyHeader = usePrevious(stickyHeader);\n  if (prevStickyHeader !== undefined && !!stickyHeader !== !!prevStickyHeader) {\n    warnOnce('Table', `\\`stickyHeader\\` has changed from \"${prevStickyHeader}\" to \"${stickyHeader}\". It is not recommended to change the value of this property during the component lifecycle. Please set it to either \"true\" or \"false\" unconditionally.`);\n  }\n  const isMobile = useMobile();\n  const {\n    isExpandable,\n    allItems,\n    getExpandableItemProps\n  } = useExpandableTableProps({\n    items,\n    expandableRows,\n    trackBy,\n    ariaLabels\n  });\n  const {\n    allRows\n  } = useProgressiveLoadingProps({\n    items: allItems,\n    getLoadingStatus,\n    getExpandableItemProps\n  });\n  const [containerWidth, wrapperMeasureRef] = useContainerQuery(rect => rect.contentBoxWidth);\n  const wrapperMeasureRefObject = useRef(null);\n  const wrapperMeasureMergedRef = useMergeRefs(wrapperMeasureRef, wrapperMeasureRefObject);\n  const [tableWidth, tableMeasureRef] = useContainerQuery(rect => rect.contentBoxWidth);\n  const tableRefObject = useRef(null);\n  const secondaryWrapperRef = React.useRef(null);\n  const theadRef = useRef(null);\n  const stickyHeaderRef = React.useRef(null);\n  const scrollbarRef = React.useRef(null);\n  const _e = useCellEditing({\n      onCancel: onEditCancel,\n      onSubmit: submitEdit\n    }),\n    {\n      cancelEdit\n    } = _e,\n    cellEditing = __rest(_e, [\"cancelEdit\"]);\n  const paginationRef = useRef({});\n  const filterRef = useRef({});\n  /* istanbul ignore next: performance marks do not work in JSDOM */\n  const getHeaderText = () => {\n    var _a, _b, _c, _d;\n    return (_c = (_b = (_a = toolsHeaderPerformanceMarkRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(`.${headerStyles['heading-text']}`)) === null || _b === void 0 ? void 0 : _b.innerText) !== null && _c !== void 0 ? _c : (_d = toolsHeaderPerformanceMarkRef.current) === null || _d === void 0 ? void 0 : _d.innerText;\n  };\n  const getPatternIdentifier = () => {\n    var _a;\n    const hasActions = !!((_a = toolsHeaderPerformanceMarkRef.current) === null || _a === void 0 ? void 0 : _a.querySelector(`.${headerStyles.actions} .${buttonStyles.button}`));\n    if (hasActions) {\n      return 'table-with-actions';\n    }\n    return '';\n  };\n  const performanceMarkAttributes = usePerformanceMarks('table', () => !loading, tableRefObject, () => ({\n    loading: loading !== null && loading !== void 0 ? loading : false,\n    header: getHeaderText()\n  }), [loading]);\n  const analyticsMetadata = getAnalyticsMetadataProps(rest);\n  const interactionMetadata = () => {\n    const filterData = filterRef.current;\n    const paginationData = paginationRef.current;\n    return JSON.stringify({\n      filterData,\n      paginationData,\n      sortingColumn: sortingColumn === null || sortingColumn === void 0 ? void 0 : sortingColumn.sortingField,\n      sortingOrder: sortingColumn ? sortingDescending ? 'Descending' : 'Ascending' : undefined\n    });\n  };\n  const getComponentConfiguration = () => {\n    var _a, _b;\n    const filterData = filterRef.current;\n    const paginationData = paginationRef.current;\n    return {\n      variant,\n      flowType: (_a = rest.analyticsMetadata) === null || _a === void 0 ? void 0 : _a.flowType,\n      instanceIdentifier: analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.instanceIdentifier,\n      taskName: (_b = analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.instanceIdentifier) !== null && _b !== void 0 ? _b : getHeaderText(),\n      patternIdentifier: getPatternIdentifier(),\n      sortedBy: {\n        columnId: sortingColumn === null || sortingColumn === void 0 ? void 0 : sortingColumn.sortingField,\n        sortingOrder: sortingColumn ? sortingDescending ? 'desc' : 'asc' : undefined\n      },\n      filtered: Boolean(filterData === null || filterData === void 0 ? void 0 : filterData.filterText),\n      currentPageIndex: paginationData.currentPageIndex,\n      totalNumberOfResources: paginationData.totalPageCount,\n      resourcesPerPage: (allRows === null || allRows === void 0 ? void 0 : allRows.length) || 0,\n      resourcesSelected: (selectedItems === null || selectedItems === void 0 ? void 0 : selectedItems.length) > 0\n    };\n  };\n  const {\n    setLastUserAction,\n    tableInteractionAttributes\n  } = useTableInteractionMetrics({\n    elementRef: tableRefObject,\n    loading,\n    instanceIdentifier: analyticsMetadata === null || analyticsMetadata === void 0 ? void 0 : analyticsMetadata.instanceIdentifier,\n    itemCount: items.length,\n    getComponentIdentifier: getHeaderText,\n    getComponentConfiguration,\n    interactionMetadata\n  });\n  useImperativeHandle(ref, () => {\n    var _a;\n    return {\n      scrollToTop: ((_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.scrollToTop) || (() => undefined),\n      cancelEdit\n    };\n  }, [cancelEdit]);\n  const wrapperRefObject = useRef(null);\n  const handleScroll = useScrollSync([wrapperRefObject, scrollbarRef, secondaryWrapperRef]);\n  const {\n    moveFocusDown,\n    moveFocusUp,\n    moveFocus\n  } = useSelectionFocusMove(selectionType, allItems.length);\n  const {\n    onRowClickHandler,\n    onRowContextMenuHandler\n  } = useRowEvents({\n    onRowClick,\n    onRowContextMenu\n  });\n  const visibleColumnDefinitions = getVisibleColumnDefinitions({\n    columnDefinitions,\n    columnDisplay,\n    visibleColumns\n  });\n  const {\n    isItemSelected,\n    getSelectAllProps,\n    getItemSelectionProps\n  } = useSelection({\n    items: allItems,\n    trackBy,\n    selectedItems,\n    selectionType,\n    isItemDisabled,\n    onSelectionChange,\n    ariaLabels,\n    loading\n  });\n  const isRowSelected = row => row.type === 'data' && isItemSelected(row.item);\n  if (isDevelopment) {\n    if (resizableColumns) {\n      checkColumnWidths(columnDefinitions);\n    }\n    if (sortingColumn === null || sortingColumn === void 0 ? void 0 : sortingColumn.sortingComparator) {\n      checkSortingState(columnDefinitions, sortingColumn.sortingComparator);\n    }\n  }\n  const isVisualRefresh = useVisualRefresh();\n  const computedVariant = isVisualRefresh ? variant : ['embedded', 'full-page'].indexOf(variant) > -1 ? 'container' : variant;\n  const hasHeader = !!(header || filter || pagination || preferences);\n  const hasSelection = !!selectionType;\n  const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n  const hasFooter = !!footer || hasFooterPagination;\n  const headerIdRef = useRef(undefined);\n  const isLabelledByHeader = !(ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tableLabel) && !!header;\n  const ariaLabelledby = isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined;\n  const setHeaderRef = useCallback(id => {\n    headerIdRef.current = id;\n  }, []);\n  const visibleColumnWidthsWithSelection = [];\n  const visibleColumnIdsWithSelection = [];\n  if (hasSelection) {\n    visibleColumnWidthsWithSelection.push({\n      id: selectionColumnId,\n      width: SELECTION_COLUMN_WIDTH\n    });\n    visibleColumnIdsWithSelection.push(selectionColumnId);\n  }\n  for (let columnIndex = 0; columnIndex < visibleColumnDefinitions.length; columnIndex++) {\n    const columnId = getColumnKey(visibleColumnDefinitions[columnIndex], columnIndex);\n    visibleColumnWidthsWithSelection.push(Object.assign(Object.assign({}, visibleColumnDefinitions[columnIndex]), {\n      id: columnId\n    }));\n    visibleColumnIdsWithSelection.push(columnId);\n  }\n  const stickyState = useStickyColumns({\n    visibleColumns: visibleColumnIdsWithSelection,\n    stickyColumnsFirst: ((_b = stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.first) !== null && _b !== void 0 ? _b : 0) + ((stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.first) && hasSelection ? 1 : 0),\n    stickyColumnsLast: (stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.last) || 0\n  });\n  const hasStickyColumns = !!(((_c = stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.first) !== null && _c !== void 0 ? _c : 0) + ((_d = stickyColumns === null || stickyColumns === void 0 ? void 0 : stickyColumns.last) !== null && _d !== void 0 ? _d : 0) > 0);\n  const hasEditableCells = !!columnDefinitions.find(col => col.editConfig);\n  let tableRole = 'table';\n  if (isExpandable) {\n    tableRole = 'treegrid';\n  } else if (enableKeyboardNavigation) {\n    tableRole = 'grid';\n  } else if (hasEditableCells) {\n    tableRole = 'grid-default';\n  }\n  const theadProps = {\n    selectionType,\n    getSelectAllProps,\n    columnDefinitions: visibleColumnDefinitions,\n    variant: computedVariant,\n    wrapLines,\n    resizableColumns,\n    sortingColumn,\n    sortingDisabled,\n    sortingDescending,\n    onSortingChange,\n    onFocusMove: moveFocus,\n    onResizeFinish(newWidth) {\n      const widthsDetail = columnDefinitions.map((column, index) => newWidth.get(getColumnKey(column, index)) || column.width || DEFAULT_COLUMN_WIDTH);\n      const widthsChanged = widthsDetail.some((width, index) => columnDefinitions[index].width !== width);\n      if (widthsChanged) {\n        fireNonCancelableEvent(onColumnWidthsChange, {\n          widths: widthsDetail\n        });\n      }\n    },\n    singleSelectionHeaderAriaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.selectionGroupLabel,\n    resizerRoleDescription: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.resizerRoleDescription,\n    stripedRows,\n    stickyState,\n    selectionColumnId,\n    tableRole,\n    isExpandable,\n    setLastUserAction\n  };\n  usePreventStickyClickScroll(wrapperRefObject);\n  const wrapperRef = useMergeRefs(wrapperRefObject, stickyState.refs.wrapper);\n  const tableRef = useMergeRefs(tableMeasureRef, tableRefObject, stickyState.refs.table);\n  const wrapperProps = getTableWrapperRoleProps({\n    tableRole,\n    isScrollable: !!(tableWidth && containerWidth && tableWidth > containerWidth),\n    ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tableLabel,\n    ariaLabelledby\n  });\n  const getMouseDownTarget = useMouseDownTarget();\n  useTableFocusNavigation({\n    enableKeyboardNavigation,\n    selectionType,\n    tableRoot: tableRefObject,\n    columnDefinitions: visibleColumnDefinitions,\n    numRows: allRows === null || allRows === void 0 ? void 0 : allRows.length\n  });\n  const toolsHeaderPerformanceMarkRef = useRef(null);\n  // If is mobile, we take into consideration the AppLayout's mobile bar and we subtract the tools wrapper height so only the table header is sticky\n  const [toolsHeaderHeight, toolsHeaderWrapperMeasureRef] = useContainerQuery(rect => rect.borderBoxHeight);\n  const toolsHeaderWrapper = useMergeRefs(toolsHeaderPerformanceMarkRef, toolsHeaderWrapperMeasureRef);\n  const colIndexOffset = selectionType ? 1 : 0;\n  const totalColumnsCount = visibleColumnDefinitions.length + colIndexOffset;\n  return React.createElement(LinkDefaultVariantContext.Provider, {\n    value: {\n      defaultVariant: 'primary'\n    }\n  }, React.createElement(TableComponentsContextProvider, {\n    value: {\n      paginationRef,\n      filterRef\n    }\n  }, React.createElement(ColumnWidthsProvider, {\n    visibleColumns: visibleColumnWidthsWithSelection,\n    resizableColumns: resizableColumns,\n    containerRef: wrapperMeasureRefObject\n  }, React.createElement(InternalContainer, Object.assign({}, baseProps, tableInteractionAttributes, {\n    __internalRootRef: __internalRootRef,\n    className: clsx(baseProps.className, styles.root),\n    __funnelSubStepProps: __funnelSubStepProps,\n    __fullPage: variant === 'full-page',\n    header: React.createElement(React.Fragment, null, hasHeader && React.createElement(\"div\", null, React.createElement(\"div\", {\n      ref: toolsHeaderWrapper,\n      className: clsx(styles['header-controls'], styles[`variant-${computedVariant}`])\n    }, React.createElement(CollectionLabelContext.Provider, {\n      value: {\n        assignId: setHeaderRef\n      }\n    }, React.createElement(ToolsHeader, {\n      header: header,\n      filter: filter,\n      pagination: pagination,\n      preferences: preferences,\n      setLastUserAction: setLastUserAction\n    })))), stickyHeader && React.createElement(StickyHeader, {\n      ref: stickyHeaderRef,\n      variant: computedVariant,\n      theadProps: theadProps,\n      wrapperRef: wrapperRefObject,\n      theadRef: theadRef,\n      secondaryWrapperRef: secondaryWrapperRef,\n      tableRef: tableRefObject,\n      onScroll: handleScroll,\n      tableHasHeader: hasHeader,\n      contentDensity: contentDensity,\n      tableRole: tableRole\n    })),\n    disableHeaderPaddings: true,\n    disableContentPaddings: true,\n    variant: toContainerVariant(computedVariant),\n    __disableFooterPaddings: true,\n    __disableFooterDivider: true,\n    __disableStickyMobile: false,\n    footer: hasFooter ? React.createElement(\"div\", {\n      className: clsx(styles['footer-wrapper'], styles[`variant-${computedVariant}`])\n    }, React.createElement(\"div\", {\n      className: clsx(styles.footer, hasFooterPagination && styles['footer-with-pagination'])\n    }, footer && React.createElement(\"span\", null, footer), hasFooterPagination && React.createElement(\"div\", {\n      className: styles['footer-pagination']\n    }, pagination))) : null,\n    __stickyHeader: stickyHeader,\n    __mobileStickyOffset: toolsHeaderHeight !== null && toolsHeaderHeight !== void 0 ? toolsHeaderHeight : 0,\n    __stickyOffset: stickyHeaderVerticalOffset\n  }, focusMarkers.root), React.createElement(\"div\", Object.assign({\n    ref: wrapperRef,\n    className: clsx(styles.wrapper, styles[`variant-${computedVariant}`], {\n      [styles['has-footer']]: hasFooter,\n      [styles['has-header']]: hasHeader\n    }),\n    style: stickyState.style.wrapper,\n    onScroll: handleScroll\n  }, wrapperProps), React.createElement(\"div\", {\n    className: styles['wrapper-content-measure'],\n    ref: wrapperMeasureMergedRef\n  }), !!renderAriaLive && !!firstIndex && React.createElement(InternalLiveRegion, {\n    hidden: true,\n    tagName: \"span\"\n  }, React.createElement(\"span\", null, renderAriaLive({\n    firstIndex,\n    lastIndex: firstIndex + items.length - 1,\n    visibleItemsCount: allItems.length,\n    totalItemsCount\n  }))), React.createElement(GridNavigationProvider, {\n    keyboardNavigation: !!enableKeyboardNavigation,\n    pageSize: GRID_NAVIGATION_PAGE_SIZE,\n    getTable: () => tableRefObject.current\n  }, React.createElement(\"table\", Object.assign({}, performanceMarkAttributes, {\n    ref: tableRef,\n    className: clsx(styles.table, resizableColumns && styles['table-layout-fixed'], contentDensity === 'compact' && getVisualContextClassname('compact-table'))\n  }, getTableRoleProps({\n    tableRole,\n    totalItemsCount,\n    totalColumnsCount: totalColumnsCount,\n    ariaLabel: ariaLabels === null || ariaLabels === void 0 ? void 0 : ariaLabels.tableLabel,\n    ariaLabelledby\n  })), React.createElement(Thead, Object.assign({\n    ref: theadRef,\n    hidden: stickyHeader,\n    onFocusedComponentChange: focusId => {\n      var _a;\n      return (_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.setFocus(focusId);\n    }\n  }, theadProps)), React.createElement(\"tbody\", null, loading || allItems.length === 0 ? React.createElement(\"tr\", null, React.createElement(NoDataCell, {\n    totalColumnsCount: totalColumnsCount,\n    hasFooter: hasFooter,\n    loading: loading,\n    loadingText: loadingText,\n    empty: empty,\n    tableRef: tableRefObject,\n    containerRef: wrapperMeasureRefObject\n  })) : allRows.map((row, rowIndex) => {\n    const isFirstRow = rowIndex === 0;\n    const isLastRow = rowIndex === allRows.length - 1;\n    const expandableProps = row.type === 'data' ? getExpandableItemProps(row.item) : undefined;\n    const rowRoleProps = getTableRowRoleProps(Object.assign({\n      tableRole,\n      firstIndex,\n      rowIndex,\n      level: row.type === 'loader' ? row.level : undefined\n    }, expandableProps));\n    const getTableItemKey = item => getItemKey(trackBy, item, rowIndex);\n    const sharedCellProps = {\n      isFirstRow,\n      isLastRow,\n      isSelected: hasSelection && isRowSelected(row),\n      isPrevSelected: hasSelection && !isFirstRow && isRowSelected(allRows[rowIndex - 1]),\n      isNextSelected: hasSelection && !isLastRow && isRowSelected(allRows[rowIndex + 1]),\n      isEvenRow: rowIndex % 2 === 0,\n      stripedRows,\n      hasSelection,\n      hasFooter,\n      stickyState,\n      tableRole\n    };\n    if (row.type === 'data') {\n      const rowId = `${getTableItemKey(row.item)}`;\n      return React.createElement(\"tr\", Object.assign({\n        key: rowId,\n        className: clsx(styles.row, sharedCellProps.isSelected && styles['row-selected']),\n        onFocus: ({\n          currentTarget\n        }) => {\n          var _a;\n          // When an element inside table row receives focus we want to adjust the scroll.\n          // However, that behaviour is unwanted when the focus is received as result of a click\n          // as it causes the click to never reach the target element.\n          if (!currentTarget.contains(getMouseDownTarget())) {\n            (_a = stickyHeaderRef.current) === null || _a === void 0 ? void 0 : _a.scrollToRow(currentTarget);\n          }\n        }\n      }, focusMarkers.item, {\n        onClick: onRowClickHandler && onRowClickHandler.bind(null, rowIndex, row.item),\n        onContextMenu: onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, row.item)\n      }, rowRoleProps), getItemSelectionProps && React.createElement(TableBodySelectionCell, Object.assign({}, sharedCellProps, {\n        columnId: selectionColumnId,\n        selectionControlProps: Object.assign(Object.assign({}, getItemSelectionProps(row.item)), {\n          onFocusDown: moveFocusDown,\n          onFocusUp: moveFocusUp,\n          rowIndex,\n          itemKey: rowId\n        }),\n        verticalAlign: cellVerticalAlign\n      })), visibleColumnDefinitions.map((column, colIndex) => {\n        var _a, _b;\n        const colId = `${getColumnKey(column, colIndex)}`;\n        const cellId = {\n          row: rowId,\n          col: colId\n        };\n        const isEditing = cellEditing.checkEditing(cellId);\n        const successfulEdit = cellEditing.checkLastSuccessfulEdit(cellId);\n        const isEditable = !!column.editConfig && !cellEditing.isLoading;\n        const cellExpandableProps = isExpandable && colIndex === 0 ? expandableProps : undefined;\n        const analyticsMetadata = {\n          component: {\n            innerContext: {\n              position: `${rowIndex + 1},${colIndex + 1}`,\n              columnId: column.id ? `${column.id}` : '',\n              columnLabel: {\n                selector: `table thead tr th:nth-child(${colIndex + (selectionType ? 2 : 1)})`,\n                root: 'component'\n              },\n              item: rowId\n            }\n          }\n        };\n        return React.createElement(TableBodyCell, Object.assign({\n          key: colId\n        }, sharedCellProps, {\n          resizableStyle: {\n            width: column.width,\n            minWidth: column.minWidth,\n            maxWidth: column.maxWidth\n          },\n          ariaLabels: ariaLabels,\n          column: column,\n          item: row.item,\n          wrapLines: wrapLines,\n          isEditable: isEditable,\n          isEditing: isEditing,\n          isRowHeader: column.isRowHeader,\n          successfulEdit: successfulEdit,\n          resizableColumns: resizableColumns,\n          onEditStart: () => cellEditing.startEdit(cellId),\n          onEditEnd: editCancelled => cellEditing.completeEdit(cellId, editCancelled),\n          submitEdit: cellEditing.submitEdit,\n          columnId: (_a = column.id) !== null && _a !== void 0 ? _a : colIndex,\n          colIndex: colIndex + colIndexOffset,\n          verticalAlign: (_b = column.verticalAlign) !== null && _b !== void 0 ? _b : cellVerticalAlign\n        }, cellExpandableProps, getAnalyticsMetadataAttribute(analyticsMetadata)));\n      }));\n    }\n    const loaderContent = getLoaderContent({\n      item: row.item,\n      loadingStatus: row.status,\n      renderLoaderPending,\n      renderLoaderLoading,\n      renderLoaderError,\n      renderLoaderEmpty\n    });\n    return loaderContent && React.createElement(\"tr\", Object.assign({\n      key: (row.item ? getTableItemKey(row.item) : 'root-' + rowIndex) + '-' + row.from,\n      className: styles.row\n    }, rowRoleProps), getItemSelectionProps && React.createElement(TableBodySelectionCell, Object.assign({}, sharedCellProps, {\n      columnId: selectionColumnId,\n      verticalAlign: cellVerticalAlign\n    })), visibleColumnDefinitions.map((column, colIndex) => {\n      var _a;\n      return React.createElement(TableLoaderCell, Object.assign({\n        key: getColumnKey(column, colIndex)\n      }, sharedCellProps, {\n        wrapLines: false,\n        columnId: (_a = column.id) !== null && _a !== void 0 ? _a : colIndex,\n        colIndex: colIndex + colIndexOffset,\n        isRowHeader: colIndex === 0,\n        level: row.level,\n        item: row.item,\n        trackBy: trackBy\n      }), loaderContent);\n    }));\n  })))), resizableColumns && React.createElement(ResizeTracker, null)), React.createElement(StickyScrollbar, {\n    ref: scrollbarRef,\n    wrapperRef: wrapperRefObject,\n    tableRef: tableRefObject,\n    onScroll: handleScroll,\n    hasStickyColumns: hasStickyColumns\n  })))));\n});\nexport default InternalTable;","map":{"version":3,"names":["React","useCallback","useImperativeHandle","useRef","clsx","useContainerQuery","warnOnce","getAnalyticsMetadataAttribute","InternalContainer","useFunnelSubStep","getAnalyticsMetadataProps","getBaseProps","getVisualContextClassname","CollectionLabelContext","LinkDefaultVariantContext","TableComponentsContextProvider","fireNonCancelableEvent","useMergeRefs","useMobile","useMouseDownTarget","usePerformanceMarks","usePrevious","useScrollSync","useTableInteractionMetrics","useVisualRefresh","isDevelopment","InternalLiveRegion","TableBodyCell","checkColumnWidths","useExpandableTableProps","NoDataCell","getLoaderContent","TableLoaderCell","useProgressiveLoadingProps","ResizeTracker","focusMarkers","useSelection","useSelectionFocusMove","TableBodySelectionCell","useStickyColumns","StickyHeader","StickyScrollbar","getTableRoleProps","getTableRowRoleProps","getTableWrapperRoleProps","GridNavigationProvider","Thead","ToolsHeader","useCellEditing","ColumnWidthsProvider","DEFAULT_COLUMN_WIDTH","usePreventStickyClickScroll","useRowEvents","useTableFocusNavigation","checkSortingState","getColumnKey","getItemKey","getVisibleColumnDefinitions","toContainerVariant","buttonStyles","headerStyles","styles","GRID_NAVIGATION_PAGE_SIZE","SELECTION_COLUMN_WIDTH","selectionColumnId","Symbol","InternalTableAsSubstep","forwardRef","props","ref","funnelSubStepProps","tableProps","Object","assign","__funnelSubStepProps","createElement","InternalTable","_a","header","footer","empty","filter","pagination","preferences","items","columnDefinitions","trackBy","loading","loadingText","selectionType","selectedItems","isItemDisabled","ariaLabels","onSelectionChange","onSortingChange","sortingColumn","sortingDescending","sortingDisabled","visibleColumns","stickyHeader","stickyHeaderVerticalOffset","onRowClick","onRowContextMenu","wrapLines","stripedRows","contentDensity","submitEdit","onEditCancel","resizableColumns","onColumnWidthsChange","variant","__internalRootRef","totalItemsCount","firstIndex","renderAriaLive","stickyColumns","columnDisplay","enableKeyboardNavigation","expandableRows","getLoadingStatus","renderLoaderPending","renderLoaderLoading","renderLoaderError","renderLoaderEmpty","cellVerticalAlign","rest","__rest","undefined","baseProps","prevStickyHeader","isMobile","isExpandable","allItems","getExpandableItemProps","allRows","containerWidth","wrapperMeasureRef","rect","contentBoxWidth","wrapperMeasureRefObject","wrapperMeasureMergedRef","tableWidth","tableMeasureRef","tableRefObject","secondaryWrapperRef","theadRef","stickyHeaderRef","scrollbarRef","_e","onCancel","onSubmit","cancelEdit","cellEditing","paginationRef","filterRef","getHeaderText","_c","_b","toolsHeaderPerformanceMarkRef","current","querySelector","innerText","_d","getPatternIdentifier","hasActions","actions","button","performanceMarkAttributes","analyticsMetadata","interactionMetadata","filterData","paginationData","JSON","stringify","sortingField","sortingOrder","getComponentConfiguration","flowType","instanceIdentifier","taskName","patternIdentifier","sortedBy","columnId","filtered","Boolean","filterText","currentPageIndex","totalNumberOfResources","totalPageCount","resourcesPerPage","length","resourcesSelected","setLastUserAction","tableInteractionAttributes","elementRef","itemCount","getComponentIdentifier","scrollToTop","wrapperRefObject","handleScroll","moveFocusDown","moveFocusUp","moveFocus","onRowClickHandler","onRowContextMenuHandler","visibleColumnDefinitions","isItemSelected","getSelectAllProps","getItemSelectionProps","isRowSelected","row","type","item","sortingComparator","isVisualRefresh","computedVariant","indexOf","hasHeader","hasSelection","hasFooterPagination","hasFooter","headerIdRef","isLabelledByHeader","tableLabel","ariaLabelledby","setHeaderRef","id","visibleColumnWidthsWithSelection","visibleColumnIdsWithSelection","push","width","columnIndex","stickyState","stickyColumnsFirst","first","stickyColumnsLast","last","hasStickyColumns","hasEditableCells","find","col","editConfig","tableRole","theadProps","onFocusMove","onResizeFinish","newWidth","widthsDetail","map","column","index","get","widthsChanged","some","widths","singleSelectionHeaderAriaLabel","selectionGroupLabel","resizerRoleDescription","wrapperRef","refs","wrapper","tableRef","table","wrapperProps","isScrollable","ariaLabel","getMouseDownTarget","tableRoot","numRows","toolsHeaderHeight","toolsHeaderWrapperMeasureRef","borderBoxHeight","toolsHeaderWrapper","colIndexOffset","totalColumnsCount","Provider","value","defaultVariant","containerRef","className","root","__fullPage","Fragment","assignId","onScroll","tableHasHeader","disableHeaderPaddings","disableContentPaddings","__disableFooterPaddings","__disableFooterDivider","__disableStickyMobile","__stickyHeader","__mobileStickyOffset","__stickyOffset","style","hidden","tagName","lastIndex","visibleItemsCount","keyboardNavigation","pageSize","getTable","onFocusedComponentChange","focusId","setFocus","rowIndex","isFirstRow","isLastRow","expandableProps","rowRoleProps","level","getTableItemKey","sharedCellProps","isSelected","isPrevSelected","isNextSelected","isEvenRow","rowId","key","onFocus","currentTarget","contains","scrollToRow","onClick","bind","onContextMenu","selectionControlProps","onFocusDown","onFocusUp","itemKey","verticalAlign","colIndex","colId","cellId","isEditing","checkEditing","successfulEdit","checkLastSuccessfulEdit","isEditable","isLoading","cellExpandableProps","component","innerContext","position","columnLabel","selector","resizableStyle","minWidth","maxWidth","isRowHeader","onEditStart","startEdit","onEditEnd","editCancelled","completeEdit","loaderContent","loadingStatus","status","from"],"sources":["/Users/jonathanfox/Desktop/amazon-nova-samples/speech-to-speech/workshops/react-client/node_modules/src/table/internal.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useImperativeHandle, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useContainerQuery } from '@cloudscape-design/component-toolkit';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport {\n  GeneratedAnalyticsMetadataFragment,\n  getAnalyticsMetadataAttribute,\n} from '@cloudscape-design/component-toolkit/internal/analytics-metadata';\n\nimport InternalContainer, { InternalContainerProps } from '../container/internal';\nimport { useFunnelSubStep } from '../internal/analytics/hooks/use-funnel';\nimport { getAnalyticsMetadataProps, getBaseProps } from '../internal/base-component';\nimport { getVisualContextClassname } from '../internal/components/visual-context';\nimport { CollectionLabelContext } from '../internal/context/collection-label-context';\nimport { LinkDefaultVariantContext } from '../internal/context/link-default-variant-context';\nimport { FilterRef, PaginationRef, TableComponentsContextProvider } from '../internal/context/table-component-context';\nimport { fireNonCancelableEvent } from '../internal/events';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useMobile } from '../internal/hooks/use-mobile';\nimport useMouseDownTarget from '../internal/hooks/use-mouse-down-target';\nimport { usePerformanceMarks } from '../internal/hooks/use-performance-marks';\nimport { usePrevious } from '../internal/hooks/use-previous';\nimport { useScrollSync } from '../internal/hooks/use-scroll-sync';\nimport { useTableInteractionMetrics } from '../internal/hooks/use-table-interaction-metrics';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { isDevelopment } from '../internal/is-development';\nimport { SomeRequired } from '../internal/types';\nimport InternalLiveRegion from '../live-region/internal';\nimport { GeneratedAnalyticsMetadataTableComponent } from './analytics-metadata/interfaces';\nimport { TableBodyCell } from './body-cell';\nimport { checkColumnWidths } from './column-widths-utils';\nimport { useExpandableTableProps } from './expandable-rows/expandable-rows-utils';\nimport { TableForwardRefType, TableProps, TableRow } from './interfaces';\nimport { NoDataCell } from './no-data-cell';\nimport { getLoaderContent } from './progressive-loading/items-loader';\nimport { TableLoaderCell } from './progressive-loading/loader-cell';\nimport { useProgressiveLoadingProps } from './progressive-loading/progressive-loading-utils';\nimport { ResizeTracker } from './resizer';\nimport { focusMarkers, useSelection, useSelectionFocusMove } from './selection';\nimport { TableBodySelectionCell } from './selection/selection-cell';\nimport { useStickyColumns } from './sticky-columns';\nimport StickyHeader, { StickyHeaderRef } from './sticky-header';\nimport { StickyScrollbar } from './sticky-scrollbar';\nimport {\n  getTableRoleProps,\n  getTableRowRoleProps,\n  getTableWrapperRoleProps,\n  GridNavigationProvider,\n  TableRole,\n} from './table-role';\nimport Thead, { TheadProps } from './thead';\nimport ToolsHeader from './tools-header';\nimport { useCellEditing } from './use-cell-editing';\nimport { ColumnWidthDefinition, ColumnWidthsProvider, DEFAULT_COLUMN_WIDTH } from './use-column-widths';\nimport { usePreventStickyClickScroll } from './use-prevent-sticky-click-scroll';\nimport { useRowEvents } from './use-row-events';\nimport useTableFocusNavigation from './use-table-focus-navigation';\nimport { checkSortingState, getColumnKey, getItemKey, getVisibleColumnDefinitions, toContainerVariant } from './utils';\n\nimport buttonStyles from '../button/styles.css.js';\nimport headerStyles from '../header/styles.css.js';\nimport styles from './styles.css.js';\n\nconst GRID_NAVIGATION_PAGE_SIZE = 10;\nconst SELECTION_COLUMN_WIDTH = 54;\nconst selectionColumnId = Symbol('selection-column-id');\n\ntype InternalTableProps<T> = SomeRequired<\n  TableProps<T>,\n  'items' | 'selectedItems' | 'variant' | 'firstIndex' | 'cellVerticalAlign'\n> &\n  InternalBaseComponentProps & {\n    __funnelSubStepProps?: InternalContainerProps['__funnelSubStepProps'];\n  };\n\nexport const InternalTableAsSubstep = React.forwardRef(\n  <T,>(props: InternalTableProps<T>, ref: React.Ref<TableProps.Ref>) => {\n    const { funnelSubStepProps } = useFunnelSubStep();\n\n    const tableProps: InternalTableProps<T> = {\n      ...props,\n      __funnelSubStepProps: funnelSubStepProps,\n    };\n\n    return <InternalTable {...tableProps} ref={ref} />;\n  }\n) as TableForwardRefType;\n\nconst InternalTable = React.forwardRef(\n  <T,>(\n    {\n      header,\n      footer,\n      empty,\n      filter,\n      pagination,\n      preferences,\n      items,\n      columnDefinitions,\n      trackBy,\n      loading,\n      loadingText,\n      selectionType,\n      selectedItems,\n      isItemDisabled,\n      ariaLabels,\n      onSelectionChange,\n      onSortingChange,\n      sortingColumn,\n      sortingDescending,\n      sortingDisabled,\n      visibleColumns,\n      stickyHeader,\n      stickyHeaderVerticalOffset,\n      onRowClick,\n      onRowContextMenu,\n      wrapLines,\n      stripedRows,\n      contentDensity,\n      submitEdit,\n      onEditCancel,\n      resizableColumns,\n      onColumnWidthsChange,\n      variant,\n      __internalRootRef,\n      totalItemsCount,\n      firstIndex,\n      renderAriaLive,\n      stickyColumns,\n      columnDisplay,\n      enableKeyboardNavigation,\n      expandableRows,\n      getLoadingStatus,\n      renderLoaderPending,\n      renderLoaderLoading,\n      renderLoaderError,\n      renderLoaderEmpty,\n      cellVerticalAlign,\n      __funnelSubStepProps,\n      ...rest\n    }: InternalTableProps<T>,\n    ref: React.Ref<TableProps.Ref>\n  ) => {\n    // Keyboard navigation defaults to `true` for tables with expandable rows.\n    if (expandableRows && enableKeyboardNavigation === undefined) {\n      enableKeyboardNavigation = true;\n    }\n\n    const baseProps = getBaseProps(rest);\n\n    const prevStickyHeader = usePrevious(stickyHeader);\n    if (prevStickyHeader !== undefined && !!stickyHeader !== !!prevStickyHeader) {\n      warnOnce(\n        'Table',\n        `\\`stickyHeader\\` has changed from \"${prevStickyHeader}\" to \"${stickyHeader}\". It is not recommended to change the value of this property during the component lifecycle. Please set it to either \"true\" or \"false\" unconditionally.`\n      );\n    }\n\n    const isMobile = useMobile();\n\n    const { isExpandable, allItems, getExpandableItemProps } = useExpandableTableProps({\n      items,\n      expandableRows,\n      trackBy,\n      ariaLabels,\n    });\n    const { allRows } = useProgressiveLoadingProps({\n      items: allItems,\n      getLoadingStatus,\n      getExpandableItemProps,\n    });\n\n    const [containerWidth, wrapperMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n    const wrapperMeasureRefObject = useRef(null);\n    const wrapperMeasureMergedRef = useMergeRefs(wrapperMeasureRef, wrapperMeasureRefObject);\n\n    const [tableWidth, tableMeasureRef] = useContainerQuery<number>(rect => rect.contentBoxWidth);\n    const tableRefObject = useRef(null);\n\n    const secondaryWrapperRef = React.useRef<HTMLDivElement>(null);\n    const theadRef = useRef<HTMLTableRowElement>(null);\n    const stickyHeaderRef = React.useRef<StickyHeaderRef>(null);\n    const scrollbarRef = React.useRef<HTMLDivElement>(null);\n    const { cancelEdit, ...cellEditing } = useCellEditing({ onCancel: onEditCancel, onSubmit: submitEdit });\n    const paginationRef = useRef<PaginationRef>({});\n    const filterRef = useRef<FilterRef>({});\n    /* istanbul ignore next: performance marks do not work in JSDOM */\n    const getHeaderText = () =>\n      toolsHeaderPerformanceMarkRef.current?.querySelector<HTMLElement>(`.${headerStyles['heading-text']}`)\n        ?.innerText ?? toolsHeaderPerformanceMarkRef.current?.innerText;\n    const getPatternIdentifier = () => {\n      const hasActions = !!toolsHeaderPerformanceMarkRef.current?.querySelector<HTMLElement>(\n        `.${headerStyles.actions} .${buttonStyles.button}`\n      );\n\n      if (hasActions) {\n        return 'table-with-actions';\n      }\n\n      return '';\n    };\n\n    const performanceMarkAttributes = usePerformanceMarks(\n      'table',\n      () => !loading,\n      tableRefObject,\n      () => ({\n        loading: loading ?? false,\n        header: getHeaderText(),\n      }),\n      [loading]\n    );\n\n    const analyticsMetadata = getAnalyticsMetadataProps(rest);\n    const interactionMetadata = () => {\n      const filterData = filterRef.current;\n      const paginationData = paginationRef.current;\n      return JSON.stringify({\n        filterData,\n        paginationData,\n        sortingColumn: sortingColumn?.sortingField,\n        sortingOrder: sortingColumn ? (sortingDescending ? 'Descending' : 'Ascending') : undefined,\n      });\n    };\n    const getComponentConfiguration = () => {\n      const filterData = filterRef.current;\n      const paginationData = paginationRef.current;\n\n      return {\n        variant,\n        flowType: rest.analyticsMetadata?.flowType,\n        instanceIdentifier: analyticsMetadata?.instanceIdentifier,\n        taskName: analyticsMetadata?.instanceIdentifier ?? getHeaderText(),\n        patternIdentifier: getPatternIdentifier(),\n        sortedBy: {\n          columnId: sortingColumn?.sortingField,\n          sortingOrder: sortingColumn ? (sortingDescending ? 'desc' : 'asc') : undefined,\n        },\n        filtered: Boolean(filterData?.filterText),\n        currentPageIndex: paginationData.currentPageIndex,\n        totalNumberOfResources: paginationData.totalPageCount,\n        resourcesPerPage: allRows?.length || 0,\n        resourcesSelected: selectedItems?.length > 0,\n      };\n    };\n\n    const { setLastUserAction, tableInteractionAttributes } = useTableInteractionMetrics({\n      elementRef: tableRefObject,\n      loading,\n      instanceIdentifier: analyticsMetadata?.instanceIdentifier,\n      itemCount: items.length,\n      getComponentIdentifier: getHeaderText,\n      getComponentConfiguration,\n      interactionMetadata,\n    });\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        scrollToTop: stickyHeaderRef.current?.scrollToTop || (() => undefined),\n        cancelEdit,\n      }),\n      [cancelEdit]\n    );\n\n    const wrapperRefObject = useRef<HTMLDivElement>(null);\n    const handleScroll = useScrollSync([wrapperRefObject, scrollbarRef, secondaryWrapperRef]);\n\n    const { moveFocusDown, moveFocusUp, moveFocus } = useSelectionFocusMove(selectionType, allItems.length);\n    const { onRowClickHandler, onRowContextMenuHandler } = useRowEvents({ onRowClick, onRowContextMenu });\n\n    const visibleColumnDefinitions = getVisibleColumnDefinitions({\n      columnDefinitions,\n      columnDisplay,\n      visibleColumns,\n    });\n\n    const { isItemSelected, getSelectAllProps, getItemSelectionProps } = useSelection({\n      items: allItems,\n      trackBy,\n      selectedItems,\n      selectionType,\n      isItemDisabled,\n      onSelectionChange,\n      ariaLabels,\n      loading,\n    });\n    const isRowSelected = (row: TableRow<T>) => row.type === 'data' && isItemSelected(row.item);\n\n    if (isDevelopment) {\n      if (resizableColumns) {\n        checkColumnWidths(columnDefinitions);\n      }\n      if (sortingColumn?.sortingComparator) {\n        checkSortingState(columnDefinitions, sortingColumn.sortingComparator);\n      }\n    }\n\n    const isVisualRefresh = useVisualRefresh();\n    const computedVariant = isVisualRefresh\n      ? variant\n      : ['embedded', 'full-page'].indexOf(variant) > -1\n        ? 'container'\n        : variant;\n    const hasHeader = !!(header || filter || pagination || preferences);\n    const hasSelection = !!selectionType;\n    const hasFooterPagination = isMobile && variant === 'full-page' && !!pagination;\n    const hasFooter = !!footer || hasFooterPagination;\n\n    const headerIdRef = useRef<string | undefined>(undefined);\n    const isLabelledByHeader = !ariaLabels?.tableLabel && !!header;\n    const ariaLabelledby = isLabelledByHeader && headerIdRef.current ? headerIdRef.current : undefined;\n    const setHeaderRef = useCallback((id: string) => {\n      headerIdRef.current = id;\n    }, []);\n\n    const visibleColumnWidthsWithSelection: ColumnWidthDefinition[] = [];\n    const visibleColumnIdsWithSelection: PropertyKey[] = [];\n    if (hasSelection) {\n      visibleColumnWidthsWithSelection.push({ id: selectionColumnId, width: SELECTION_COLUMN_WIDTH });\n      visibleColumnIdsWithSelection.push(selectionColumnId);\n    }\n    for (let columnIndex = 0; columnIndex < visibleColumnDefinitions.length; columnIndex++) {\n      const columnId = getColumnKey(visibleColumnDefinitions[columnIndex], columnIndex);\n      visibleColumnWidthsWithSelection.push({ ...visibleColumnDefinitions[columnIndex], id: columnId });\n      visibleColumnIdsWithSelection.push(columnId);\n    }\n\n    const stickyState = useStickyColumns({\n      visibleColumns: visibleColumnIdsWithSelection,\n      stickyColumnsFirst: (stickyColumns?.first ?? 0) + (stickyColumns?.first && hasSelection ? 1 : 0),\n      stickyColumnsLast: stickyColumns?.last || 0,\n    });\n\n    const hasStickyColumns = !!((stickyColumns?.first ?? 0) + (stickyColumns?.last ?? 0) > 0);\n    const hasEditableCells = !!columnDefinitions.find(col => col.editConfig);\n\n    let tableRole: TableRole = 'table';\n    if (isExpandable) {\n      tableRole = 'treegrid';\n    } else if (enableKeyboardNavigation) {\n      tableRole = 'grid';\n    } else if (hasEditableCells) {\n      tableRole = 'grid-default';\n    }\n\n    const theadProps: TheadProps = {\n      selectionType,\n      getSelectAllProps,\n      columnDefinitions: visibleColumnDefinitions,\n      variant: computedVariant,\n      wrapLines,\n      resizableColumns,\n      sortingColumn,\n      sortingDisabled,\n      sortingDescending,\n      onSortingChange,\n      onFocusMove: moveFocus,\n      onResizeFinish(newWidth) {\n        const widthsDetail = columnDefinitions.map(\n          (column, index) =>\n            newWidth.get(getColumnKey(column, index)) || (column.width as number) || DEFAULT_COLUMN_WIDTH\n        );\n        const widthsChanged = widthsDetail.some((width, index) => columnDefinitions[index].width !== width);\n        if (widthsChanged) {\n          fireNonCancelableEvent(onColumnWidthsChange, { widths: widthsDetail });\n        }\n      },\n      singleSelectionHeaderAriaLabel: ariaLabels?.selectionGroupLabel,\n      resizerRoleDescription: ariaLabels?.resizerRoleDescription,\n      stripedRows,\n      stickyState,\n      selectionColumnId,\n      tableRole,\n      isExpandable,\n      setLastUserAction,\n    };\n\n    usePreventStickyClickScroll(wrapperRefObject);\n\n    const wrapperRef = useMergeRefs(wrapperRefObject, stickyState.refs.wrapper);\n    const tableRef = useMergeRefs(tableMeasureRef, tableRefObject, stickyState.refs.table);\n\n    const wrapperProps = getTableWrapperRoleProps({\n      tableRole,\n      isScrollable: !!(tableWidth && containerWidth && tableWidth > containerWidth),\n      ariaLabel: ariaLabels?.tableLabel,\n      ariaLabelledby,\n    });\n\n    const getMouseDownTarget = useMouseDownTarget();\n\n    useTableFocusNavigation({\n      enableKeyboardNavigation,\n      selectionType,\n      tableRoot: tableRefObject,\n      columnDefinitions: visibleColumnDefinitions,\n      numRows: allRows?.length,\n    });\n    const toolsHeaderPerformanceMarkRef = useRef<HTMLDivElement>(null);\n    // If is mobile, we take into consideration the AppLayout's mobile bar and we subtract the tools wrapper height so only the table header is sticky\n    const [toolsHeaderHeight, toolsHeaderWrapperMeasureRef] = useContainerQuery(rect => rect.borderBoxHeight);\n    const toolsHeaderWrapper = useMergeRefs(toolsHeaderPerformanceMarkRef, toolsHeaderWrapperMeasureRef);\n\n    const colIndexOffset = selectionType ? 1 : 0;\n    const totalColumnsCount = visibleColumnDefinitions.length + colIndexOffset;\n\n    return (\n      <LinkDefaultVariantContext.Provider value={{ defaultVariant: 'primary' }}>\n        <TableComponentsContextProvider value={{ paginationRef, filterRef }}>\n          <ColumnWidthsProvider\n            visibleColumns={visibleColumnWidthsWithSelection}\n            resizableColumns={resizableColumns}\n            containerRef={wrapperMeasureRefObject}\n          >\n            <InternalContainer\n              {...baseProps}\n              {...tableInteractionAttributes}\n              __internalRootRef={__internalRootRef}\n              className={clsx(baseProps.className, styles.root)}\n              __funnelSubStepProps={__funnelSubStepProps}\n              __fullPage={variant === 'full-page'}\n              header={\n                <>\n                  {hasHeader && (\n                    <div>\n                      <div\n                        ref={toolsHeaderWrapper}\n                        className={clsx(styles['header-controls'], styles[`variant-${computedVariant}`])}\n                      >\n                        <CollectionLabelContext.Provider value={{ assignId: setHeaderRef }}>\n                          <ToolsHeader\n                            header={header}\n                            filter={filter}\n                            pagination={pagination}\n                            preferences={preferences}\n                            setLastUserAction={setLastUserAction}\n                          />\n                        </CollectionLabelContext.Provider>\n                      </div>\n                    </div>\n                  )}\n                  {stickyHeader && (\n                    <StickyHeader\n                      ref={stickyHeaderRef}\n                      variant={computedVariant}\n                      theadProps={theadProps}\n                      wrapperRef={wrapperRefObject}\n                      theadRef={theadRef}\n                      secondaryWrapperRef={secondaryWrapperRef}\n                      tableRef={tableRefObject}\n                      onScroll={handleScroll}\n                      tableHasHeader={hasHeader}\n                      contentDensity={contentDensity}\n                      tableRole={tableRole}\n                    />\n                  )}\n                </>\n              }\n              disableHeaderPaddings={true}\n              disableContentPaddings={true}\n              variant={toContainerVariant(computedVariant)}\n              __disableFooterPaddings={true}\n              __disableFooterDivider={true}\n              __disableStickyMobile={false}\n              footer={\n                hasFooter ? (\n                  <div className={clsx(styles['footer-wrapper'], styles[`variant-${computedVariant}`])}>\n                    <div className={clsx(styles.footer, hasFooterPagination && styles['footer-with-pagination'])}>\n                      {footer && <span>{footer}</span>}\n                      {hasFooterPagination && <div className={styles['footer-pagination']}>{pagination}</div>}\n                    </div>\n                  </div>\n                ) : null\n              }\n              __stickyHeader={stickyHeader}\n              __mobileStickyOffset={toolsHeaderHeight ?? 0}\n              __stickyOffset={stickyHeaderVerticalOffset}\n              {...focusMarkers.root}\n            >\n              <div\n                ref={wrapperRef}\n                className={clsx(styles.wrapper, styles[`variant-${computedVariant}`], {\n                  [styles['has-footer']]: hasFooter,\n                  [styles['has-header']]: hasHeader,\n                })}\n                style={stickyState.style.wrapper}\n                onScroll={handleScroll}\n                {...wrapperProps}\n              >\n                <div className={styles['wrapper-content-measure']} ref={wrapperMeasureMergedRef}></div>\n                {!!renderAriaLive && !!firstIndex && (\n                  <InternalLiveRegion hidden={true} tagName=\"span\">\n                    <span>\n                      {renderAriaLive({\n                        firstIndex,\n                        lastIndex: firstIndex + items.length - 1,\n                        visibleItemsCount: allItems.length,\n                        totalItemsCount,\n                      })}\n                    </span>\n                  </InternalLiveRegion>\n                )}\n                <GridNavigationProvider\n                  keyboardNavigation={!!enableKeyboardNavigation}\n                  pageSize={GRID_NAVIGATION_PAGE_SIZE}\n                  getTable={() => tableRefObject.current}\n                >\n                  <table\n                    {...performanceMarkAttributes}\n                    ref={tableRef}\n                    className={clsx(\n                      styles.table,\n                      resizableColumns && styles['table-layout-fixed'],\n                      contentDensity === 'compact' && getVisualContextClassname('compact-table')\n                    )}\n                    {...getTableRoleProps({\n                      tableRole,\n                      totalItemsCount,\n                      totalColumnsCount: totalColumnsCount,\n                      ariaLabel: ariaLabels?.tableLabel,\n                      ariaLabelledby,\n                    })}\n                  >\n                    <Thead\n                      ref={theadRef}\n                      hidden={stickyHeader}\n                      onFocusedComponentChange={focusId => stickyHeaderRef.current?.setFocus(focusId)}\n                      {...theadProps}\n                    />\n                    <tbody>\n                      {loading || allItems.length === 0 ? (\n                        <tr>\n                          <NoDataCell\n                            totalColumnsCount={totalColumnsCount}\n                            hasFooter={hasFooter}\n                            loading={loading}\n                            loadingText={loadingText}\n                            empty={empty}\n                            tableRef={tableRefObject}\n                            containerRef={wrapperMeasureRefObject}\n                          />\n                        </tr>\n                      ) : (\n                        allRows.map((row, rowIndex) => {\n                          const isFirstRow = rowIndex === 0;\n                          const isLastRow = rowIndex === allRows.length - 1;\n                          const expandableProps = row.type === 'data' ? getExpandableItemProps(row.item) : undefined;\n                          const rowRoleProps = getTableRowRoleProps({\n                            tableRole,\n                            firstIndex,\n                            rowIndex,\n                            level: row.type === 'loader' ? row.level : undefined,\n                            ...expandableProps,\n                          });\n                          const getTableItemKey = (item: T) => getItemKey(trackBy, item, rowIndex);\n                          const sharedCellProps = {\n                            isFirstRow,\n                            isLastRow,\n                            isSelected: hasSelection && isRowSelected(row),\n                            isPrevSelected: hasSelection && !isFirstRow && isRowSelected(allRows[rowIndex - 1]),\n                            isNextSelected: hasSelection && !isLastRow && isRowSelected(allRows[rowIndex + 1]),\n                            isEvenRow: rowIndex % 2 === 0,\n                            stripedRows,\n                            hasSelection,\n                            hasFooter,\n                            stickyState,\n                            tableRole,\n                          };\n                          if (row.type === 'data') {\n                            const rowId = `${getTableItemKey(row.item)}`;\n                            return (\n                              <tr\n                                key={rowId}\n                                className={clsx(styles.row, sharedCellProps.isSelected && styles['row-selected'])}\n                                onFocus={({ currentTarget }) => {\n                                  // When an element inside table row receives focus we want to adjust the scroll.\n                                  // However, that behaviour is unwanted when the focus is received as result of a click\n                                  // as it causes the click to never reach the target element.\n                                  if (!currentTarget.contains(getMouseDownTarget())) {\n                                    stickyHeaderRef.current?.scrollToRow(currentTarget);\n                                  }\n                                }}\n                                {...focusMarkers.item}\n                                onClick={onRowClickHandler && onRowClickHandler.bind(null, rowIndex, row.item)}\n                                onContextMenu={\n                                  onRowContextMenuHandler && onRowContextMenuHandler.bind(null, rowIndex, row.item)\n                                }\n                                {...rowRoleProps}\n                              >\n                                {getItemSelectionProps && (\n                                  <TableBodySelectionCell\n                                    {...sharedCellProps}\n                                    columnId={selectionColumnId}\n                                    selectionControlProps={{\n                                      ...getItemSelectionProps(row.item),\n                                      onFocusDown: moveFocusDown,\n                                      onFocusUp: moveFocusUp,\n                                      rowIndex,\n                                      itemKey: rowId,\n                                    }}\n                                    verticalAlign={cellVerticalAlign}\n                                  />\n                                )}\n\n                                {visibleColumnDefinitions.map((column, colIndex) => {\n                                  const colId = `${getColumnKey(column, colIndex)}`;\n                                  const cellId = { row: rowId, col: colId };\n                                  const isEditing = cellEditing.checkEditing(cellId);\n                                  const successfulEdit = cellEditing.checkLastSuccessfulEdit(cellId);\n                                  const isEditable = !!column.editConfig && !cellEditing.isLoading;\n                                  const cellExpandableProps =\n                                    isExpandable && colIndex === 0 ? expandableProps : undefined;\n\n                                  const analyticsMetadata: GeneratedAnalyticsMetadataFragment = {\n                                    component: {\n                                      innerContext: {\n                                        position: `${rowIndex + 1},${colIndex + 1}`,\n                                        columnId: column.id ? `${column.id}` : '',\n                                        columnLabel: {\n                                          selector: `table thead tr th:nth-child(${colIndex + (selectionType ? 2 : 1)})`,\n                                          root: 'component',\n                                        },\n                                        item: rowId,\n                                      } as GeneratedAnalyticsMetadataTableComponent['innerContext'],\n                                    },\n                                  };\n\n                                  return (\n                                    <TableBodyCell\n                                      key={colId}\n                                      {...sharedCellProps}\n                                      resizableStyle={{\n                                        width: column.width,\n                                        minWidth: column.minWidth,\n                                        maxWidth: column.maxWidth,\n                                      }}\n                                      ariaLabels={ariaLabels}\n                                      column={column}\n                                      item={row.item}\n                                      wrapLines={wrapLines}\n                                      isEditable={isEditable}\n                                      isEditing={isEditing}\n                                      isRowHeader={column.isRowHeader}\n                                      successfulEdit={successfulEdit}\n                                      resizableColumns={resizableColumns}\n                                      onEditStart={() => cellEditing.startEdit(cellId)}\n                                      onEditEnd={editCancelled => cellEditing.completeEdit(cellId, editCancelled)}\n                                      submitEdit={cellEditing.submitEdit}\n                                      columnId={column.id ?? colIndex}\n                                      colIndex={colIndex + colIndexOffset}\n                                      verticalAlign={column.verticalAlign ?? cellVerticalAlign}\n                                      {...cellExpandableProps}\n                                      {...getAnalyticsMetadataAttribute(analyticsMetadata)}\n                                    />\n                                  );\n                                })}\n                              </tr>\n                            );\n                          }\n\n                          const loaderContent = getLoaderContent({\n                            item: row.item,\n                            loadingStatus: row.status,\n                            renderLoaderPending,\n                            renderLoaderLoading,\n                            renderLoaderError,\n                            renderLoaderEmpty,\n                          });\n                          return (\n                            loaderContent && (\n                              <tr\n                                key={(row.item ? getTableItemKey(row.item) : 'root-' + rowIndex) + '-' + row.from}\n                                className={styles.row}\n                                {...rowRoleProps}\n                              >\n                                {getItemSelectionProps && (\n                                  <TableBodySelectionCell\n                                    {...sharedCellProps}\n                                    columnId={selectionColumnId}\n                                    verticalAlign={cellVerticalAlign}\n                                  />\n                                )}\n                                {visibleColumnDefinitions.map((column, colIndex) => (\n                                  <TableLoaderCell\n                                    key={getColumnKey(column, colIndex)}\n                                    {...sharedCellProps}\n                                    wrapLines={false}\n                                    columnId={column.id ?? colIndex}\n                                    colIndex={colIndex + colIndexOffset}\n                                    isRowHeader={colIndex === 0}\n                                    level={row.level}\n                                    item={row.item}\n                                    trackBy={trackBy}\n                                  >\n                                    {loaderContent}\n                                  </TableLoaderCell>\n                                ))}\n                              </tr>\n                            )\n                          );\n                        })\n                      )}\n                    </tbody>\n                  </table>\n                </GridNavigationProvider>\n\n                {resizableColumns && <ResizeTracker />}\n              </div>\n\n              <StickyScrollbar\n                ref={scrollbarRef}\n                wrapperRef={wrapperRefObject}\n                tableRef={tableRefObject}\n                onScroll={handleScroll}\n                hasStickyColumns={hasStickyColumns}\n              />\n            </InternalContainer>\n          </ColumnWidthsProvider>\n        </TableComponentsContextProvider>\n      </LinkDefaultVariantContext.Provider>\n    );\n  }\n) as TableForwardRefType;\n\nexport default InternalTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}