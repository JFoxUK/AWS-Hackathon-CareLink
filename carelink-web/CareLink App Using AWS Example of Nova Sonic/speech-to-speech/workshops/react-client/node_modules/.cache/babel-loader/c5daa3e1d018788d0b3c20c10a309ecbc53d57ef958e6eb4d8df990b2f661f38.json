{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanfox/Desktop/amazon-nova-samples/speech-to-speech/workshops/react-client/src/s2s.js\";\nimport React, { createRef } from 'react';\nimport './s2s.css';\nimport { Icon, Alert, Button, Modal, Box, SpaceBetween, Container, ColumnLayout, Header, FormField, Select, Textarea, Checkbox } from '@cloudscape-design/components';\nimport S2sEvent from './helper/s2sEvents';\nimport { base64LPCM } from './helper/audioHelper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass S2sChatBot extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSessionChange = e => {\n      let customPrompt = localStorage.getItem('carelink_summary');\n      // Fallback to default if summary is missing, empty, or too long\n      const DEFAULT_PROMPT = S2sEvent.DEFAULT_SYSTEM_PROMPT;\n      if (customPrompt && typeof customPrompt === 'string') {\n        customPrompt = customPrompt.trim().slice(0, 1000); // Limit length\n      }\n      if (!customPrompt) {\n        customPrompt = DEFAULT_PROMPT;\n      }\n      if (this.state.sessionStarted) {\n        this.endSession();\n        this.cancelAudio();\n        this.setState({\n          sessionStarted: false\n        });\n      } else {\n        this.setState({\n          configSystemPrompt: customPrompt,\n          chatMessages: [],\n          events: [],\n          eventsByContentName: []\n        }, () => {\n          this.startSession();\n          this.setState({\n            sessionStarted: true\n          });\n        });\n      }\n    };\n    this.state = {\n      status: \"loading\",\n      // null, loading, loaded\n      alert: null,\n      sessionStarted: false,\n      showEventJson: false,\n      showConfig: false,\n      selectedEvent: null,\n      chatMessages: {},\n      events: [],\n      audioResponse: [],\n      eventsByContentName: [],\n      audioChunks: [],\n      audioInputIndex: 0,\n      audioPlayPromise: null,\n      includeChatHistory: false,\n      // S2S config items\n      configAudioInput: null,\n      configSystemPrompt: S2sEvent.DEFAULT_SYSTEM_PROMPT,\n      configAudioOutput: S2sEvent.DEFAULT_AUDIO_OUTPUT_CONFIG,\n      configVoiceIdOption: {\n        label: \"Matthew (en-US)\",\n        value: \"matthew\"\n      },\n      configToolUse: JSON.stringify(S2sEvent.DEFAULT_TOOL_CONFIG, null, 2),\n      configChatHistory: JSON.stringify(S2sEvent.DEFAULT_CHAT_HISTORY, null, 2)\n    };\n    this.socket = null;\n    this.mediaRecorder = null;\n    //this.audioQueue = new AudioQueue();\n    this.chatMessagesEndRef = /*#__PURE__*/React.createRef();\n    this.audioPlayerRef = /*#__PURE__*/createRef();\n    this.audioQueue = [];\n    this.promptName = null;\n    this.textContentName = null;\n    this.audioContentName = null;\n  }\n  componentDidMount() {\n    //this.connectWebSocket();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.chatMessages.length !== this.state.chatMessages.length) {\n      var _this$chatMessagesEnd;\n      (_this$chatMessagesEnd = this.chatMessagesEndRef.current) === null || _this$chatMessagesEnd === void 0 ? void 0 : _this$chatMessagesEnd.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }\n  sendEvent(event) {\n    if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(event));\n      event.timestamp = Date.now();\n      this.displayEvent(event, \"out\");\n    }\n  }\n  cancelAudio() {\n    try {\n      if (this.audioPlayerRef.current && this.state.audioPlayPromise) {\n        this.audioPlayerRef.current.pause();\n        this.audioPlayerRef.current.currentTime = 0;\n        //this.audioPlayerRef.current.removeAttribute('src');\n        this.setState({\n          audioPlayPromise: null\n        });\n      }\n      this.audioQueue = [];\n      this.setState({\n        isPlaying: false\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  audioEnqueue(audioUrl) {\n    this.audioQueue.push(audioUrl);\n    if (!this.state.isPlaying) {\n      this.playNext();\n    }\n  }\n  playNext() {\n    try {\n      if (this.isPlaying || this.audioQueue.length === 0) return;\n      if (this.audioPlayerRef.current && this.audioQueue.length > 0) {\n        let audioUrl = this.audioQueue.shift();\n        this.setState({\n          isPlaying: true\n        });\n        try {\n          this.audioPlayerRef.current.src = audioUrl;\n          this.audioPlayerRef.current.load(); // Reload the audio element to apply the new src\n          this.setState({\n            audioPlayPromise: this.audioPlayerRef.current.play().catch(err => {})\n          });\n        } catch (err) {\n          console.log(err);\n        }\n\n        // Wait for the audio to finish, then play the next one\n        this.audioPlayerRef.current.onended = () => {\n          this.setState({\n            isPlaying: false\n          });\n          this.playNext();\n        };\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  handleIncomingMessage(message) {\n    const eventType = Object.keys(message === null || message === void 0 ? void 0 : message.event)[0];\n    const role = message.event[eventType][\"role\"];\n    const content = message.event[eventType][\"content\"];\n    const contentId = message.event[eventType].contentId;\n    let stopReason = message.event[eventType].stopReason;\n    const contentType = message.event[eventType].type;\n    var chatMessages = this.state.chatMessages;\n    var audioResponse = this.state.audioResponse;\n    switch (eventType) {\n      case \"textOutput\":\n        // Detect interruption\n        if (role === \"ASSISTANT\" && content.startsWith(\"{\")) {\n          const evt = JSON.parse(content);\n          if (evt.interrupted === true) {\n            this.cancelAudio();\n          }\n        }\n        if (chatMessages.hasOwnProperty(contentId)) {\n          chatMessages[contentId].content = content;\n          chatMessages[contentId].role = role;\n          if (chatMessages[contentId].raw === undefined) chatMessages[contentId].raw = [];\n          chatMessages[contentId].raw.push(message);\n        }\n        this.setState({\n          chatMessages: chatMessages\n        });\n        break;\n      case \"audioOutput\":\n        audioResponse[contentId] += message.event[eventType].content;\n        this.setState({\n          audioResponse: audioResponse\n        });\n        //this.state.audioResponse[contentId] += message.event[eventType].content;\n        break;\n      case \"contentStart\":\n        if (contentType === \"AUDIO\") {\n          audioResponse[contentId] = \"\";\n          this.setState({\n            audioResponse: audioResponse\n          });\n        } else if (contentType === \"TEXT\") {\n          var generationStage = \"\";\n          if (message.event.contentStart.additionalModelFields) {\n            var _JSON$parse;\n            generationStage = (_JSON$parse = JSON.parse(message.event.contentStart.additionalModelFields)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.generationStage;\n          }\n          chatMessages[contentId] = {\n            \"content\": \"\",\n            \"role\": role,\n            \"generationStage\": generationStage,\n            \"raw\": []\n          };\n          chatMessages[contentId].raw.push(message);\n          this.setState({\n            chatMessages: chatMessages\n          });\n        }\n        break;\n      case \"contentEnd\":\n        if (contentType === \"AUDIO\") {\n          var audioUrl = base64LPCM(this.state.audioResponse[contentId]);\n          this.audioEnqueue(audioUrl);\n          //this.audioQueue.enqueue(audioUrl);\n        } else if (contentType === \"TEXT\") {\n          if (chatMessages.hasOwnProperty(contentId)) {\n            if (chatMessages[contentId].raw === undefined) chatMessages[contentId].raw = [];\n            chatMessages[contentId].raw.push(message);\n            chatMessages[contentId].stopReason = stopReason;\n          }\n          this.setState({\n            chatMessages: chatMessages\n          });\n        }\n        break;\n      default:\n        break;\n    }\n    this.displayEvent(message, \"in\");\n  }\n  displayEvent(event, type) {\n    if (event && event.event) {\n      const eventName = Object.keys(event === null || event === void 0 ? void 0 : event.event)[0];\n      let key = null;\n      let ts = Date.now();\n      let interrupted = false;\n      const contentType = event.event[eventName].type;\n      const contentName = event.event[eventName].contentName;\n      const contentId = event.event[eventName].contentId;\n      if (eventName === \"audioOutput\") {\n        key = `${eventName}-${contentId}`;\n        // truncate event audio content\n        event.event.audioOutput.content = event.event.audioOutput.content.substr(0, 10);\n      } else if (eventName === \"audioInput\") {\n        key = `${eventName}-${contentName}-${this.state.audioInputIndex}`;\n      } else if (eventName === \"contentStart\" || eventName === \"textInput\" || eventName === \"contentEnd\") {\n        key = `${eventName}}-${contentName}-${contentType}`;\n        if (type === \"in\" && event.event[eventName].type === \"AUDIO\") {\n          this.setState({\n            audioInputIndex: this.state.audioInputIndex + 1\n          });\n        } else if (type === \"out\") {\n          key = `${eventName}-${contentName}-${contentType}-${ts}`;\n        }\n      } else if (eventName === \"textOutput\") {\n        const role = event.event[eventName].role;\n        const content = event.event[eventName].content;\n        if (role === \"ASSISTANT\" && content.startsWith(\"{\")) {\n          const evt = JSON.parse(content);\n          interrupted = evt.interrupted === true;\n        }\n        key = `${eventName}-${ts}`;\n      } else {\n        key = `${eventName}-${ts}`;\n      }\n      let eventsByContentName = this.state.eventsByContentName;\n      if (eventsByContentName === null) eventsByContentName = [];\n      let exists = false;\n      for (var i = 0; i < eventsByContentName.length; i++) {\n        var item = eventsByContentName[i];\n        if (item.key === key && item.type === type) {\n          item.events.push(event);\n          item.interrupted = interrupted;\n          exists = true;\n          break;\n        }\n      }\n      if (!exists) {\n        const item = {\n          key: key,\n          name: eventName,\n          type: type,\n          events: [event],\n          ts: ts\n        };\n        eventsByContentName.unshift(item);\n      }\n      this.setState({\n        eventsByContentName: eventsByContentName\n      });\n    }\n  }\n  connectWebSocket() {\n    // Connect to the S2S WebSocket server\n    if (this.socket === null || this.socket.readyState !== WebSocket.OPEN) {\n      this.socket = new WebSocket(process.env.REACT_APP_WEBSOCKET_URL);\n      this.socket.onopen = () => {\n        console.log(\"WebSocket connected!\");\n        this.promptName = crypto.randomUUID();\n        this.textContentName = crypto.randomUUID();\n        this.audioContentName = crypto.randomUUID();\n\n        // Start session events\n        this.sendEvent(S2sEvent.sessionStart());\n        var audioConfig = S2sEvent.DEFAULT_AUDIO_OUTPUT_CONFIG;\n        audioConfig.voiceId = this.state.configVoiceIdOption.value;\n        var toolConfig = this.state.configToolUse ? JSON.parse(this.state.configToolUse) : S2sEvent.DEFAULT_TOOL_CONFIG;\n        this.sendEvent(S2sEvent.promptStart(this.promptName, audioConfig, toolConfig));\n        this.sendEvent(S2sEvent.contentStartText(this.promptName, this.textContentName));\n        this.sendEvent(S2sEvent.textInput(this.promptName, this.textContentName, this.state.configSystemPrompt));\n        this.sendEvent(S2sEvent.contentEnd(this.promptName, this.textContentName));\n\n        // Chat history\n        if (this.state.includeChatHistory) {\n          var chatHistory = JSON.parse(this.state.configChatHistory);\n          if (chatHistory === null) chatHistory = S2sEvent.DEFAULT_CHAT_HISTORY;\n          for (const chat of chatHistory) {\n            const chatHistoryContentName = crypto.randomUUID();\n            this.sendEvent(S2sEvent.contentStartText(this.promptName, chatHistoryContentName, chat.role));\n            this.sendEvent(S2sEvent.textInput(this.promptName, chatHistoryContentName, chat.content));\n            this.sendEvent(S2sEvent.contentEnd(this.promptName, chatHistoryContentName));\n          }\n        }\n        this.sendEvent(S2sEvent.contentStartAudio(this.promptName, this.audioContentName));\n      };\n\n      // Handle incoming messages\n      this.socket.onmessage = message => {\n        const event = JSON.parse(message.data);\n        this.handleIncomingMessage(event);\n      };\n\n      // Handle errors\n      this.socket.onerror = error => {\n        this.setState({\n          alert: \"WebSocket Error: \",\n          error\n        });\n        console.error(\"WebSocket Error: \", error);\n      };\n\n      // Handle connection close\n      this.socket.onclose = () => {\n        console.log(\"WebSocket Disconnected\");\n        if (this.state.sessionStarted) this.setState({\n          alert: \"WebSocket Disconnected\"\n        });\n      };\n    }\n  }\n  startSession() {\n    // Init S2sSessionManager\n    try {\n      if (this.socket === null || this.socket.readyState !== WebSocket.OPEN) {\n        this.connectWebSocket();\n      }\n\n      // Start microphone \n      this.startMicrophone();\n    } catch (error) {\n      console.error('Error accessing microphone: ', error);\n    }\n  }\n  async startMicrophone() {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)({\n        latencyHint: 'interactive'\n      });\n      const source = audioContext.createMediaStreamSource(stream);\n      const processor = audioContext.createScriptProcessor(512, 1, 1);\n      source.connect(processor);\n      processor.connect(audioContext.destination);\n      const targetSampleRate = 16000;\n      processor.onaudioprocess = async e => {\n        if (this.state.sessionStarted) {\n          const inputBuffer = e.inputBuffer;\n\n          // Create an offline context for resampling\n          const offlineContext = new OfflineAudioContext({\n            numberOfChannels: 1,\n            length: Math.ceil(inputBuffer.duration * targetSampleRate),\n            sampleRate: targetSampleRate\n          });\n\n          // Copy input to offline context buffer\n          const offlineSource = offlineContext.createBufferSource();\n          const monoBuffer = offlineContext.createBuffer(1, inputBuffer.length, inputBuffer.sampleRate);\n          monoBuffer.copyToChannel(inputBuffer.getChannelData(0), 0);\n          offlineSource.buffer = monoBuffer;\n          offlineSource.connect(offlineContext.destination);\n          offlineSource.start(0);\n\n          // Resample and get the rendered buffer\n          const renderedBuffer = await offlineContext.startRendering();\n          const resampled = renderedBuffer.getChannelData(0);\n\n          // Convert to Int16 PCM\n          const buffer = new ArrayBuffer(resampled.length * 2);\n          const pcmData = new DataView(buffer);\n          for (let i = 0; i < resampled.length; i++) {\n            const s = Math.max(-1, Math.min(1, resampled[i]));\n            pcmData.setInt16(i * 2, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n          }\n\n          // Convert to binary string and base64 encode\n          let binary = '';\n          for (let i = 0; i < pcmData.byteLength; i++) {\n            binary += String.fromCharCode(pcmData.getUint8(i));\n          }\n          const event = S2sEvent.audioInput(this.promptName, this.audioContentName, btoa(binary));\n          this.sendEvent(event);\n        }\n      };\n      window.audioCleanup = () => {\n        processor.disconnect();\n        source.disconnect();\n        stream.getTracks().forEach(track => track.stop());\n      };\n      this.mediaRecorder = new MediaRecorder(stream);\n      this.mediaRecorder.ondataavailable = event => {\n        this.state.audioChunks.push(event.data);\n      };\n      this.mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(this.state.audioChunks, {\n          type: 'audio/webm'\n        });\n        this.sendEvent(S2sEvent.audioInput(this.promptName, this.audioContentName, btoa(audioBlob)));\n        this.setState({\n          audioChunks: []\n        });\n      };\n      this.mediaRecorder.start();\n      this.setState({\n        sessionStarted: true\n      });\n      console.log('Microphone recording started');\n    } catch (error) {\n      console.error('Error accessing microphone: ', error);\n    }\n  }\n  endSession() {\n    if (this.socket) {\n      // Close microphone\n      if (this.mediaRecorder && this.state.sessionStarted) {\n        this.mediaRecorder.stop();\n        console.log('Microphone recording stopped');\n      }\n\n      // Close S2sSessionManager\n      this.sendEvent(S2sEvent.contentEnd(this.promptName, this.audioContentName));\n      this.sendEvent(S2sEvent.promptEnd(this.promptName));\n      this.sendEvent(S2sEvent.sessionEnd());\n\n      // Close websocket\n      this.socket.close();\n      this.setState({\n        sessionStarted: false\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"s2s\",\n      children: [this.state.alert !== null && this.state.alert.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          statusIconAriaLabel: \"Warning\",\n          type: \"warning\",\n          children: this.state.alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: this.handleSessionChange,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: this.state.sessionStarted ? \"microphone-off\" : \"microphone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 29\n            }, this), \"\\xA0\\xA0\", this.state.sessionStarted ? \"End Conversation\" : \"Start Conversation\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chathistory\",\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: this.state.includeChatHistory,\n              onChange: ({\n                detail\n              }) => this.setState({\n                includeChatHistory: detail.checked\n              }),\n              children: \"Include chat history\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"desc\",\n              children: \"You can view sample chat history in the settings.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            ref: this.audioPlayerRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.setState({\n              showConfig: true\n            }),\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ColumnLayout, {\n        columns: 2,\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          header: /*#__PURE__*/_jsxDEV(Header, {\n            variant: \"h2\",\n            children: \"Conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 25\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatarea\",\n            children: [Object.keys(this.state.chatMessages).map((key, index) => {\n              const msg = this.state.chatMessages[key];\n              //if (msg.stopReason === \"END_TURN\" || msg.role === \"USER\")\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: msg.role === \"USER\" ? \"user\" : \"bot\",\n                  onClick: () => this.setState({\n                    showEventJson: true,\n                    selectedEvent: {\n                      events: msg.raw\n                    }\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: msg.role === \"USER\" ? \"user-profile\" : \"gen-ai\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 536,\n                    columnNumber: 41\n                  }, this), \"\\xA0\\xA0\", msg.content, msg.role === \"ASSISTANT\" && msg.generationStage ? ` [${msg.generationStage}]` : \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 40\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"endbar\",\n              ref: this.chatMessagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          header: /*#__PURE__*/_jsxDEV(Header, {\n            variant: \"h2\",\n            children: \"Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 25\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events\",\n            children: [this.state.eventsByContentName.map(event => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: event.name === \"toolUse\" ? \"event-tool\" : event.interrupted === true ? \"event-int\" : event.type === \"in\" ? \"event-in\" : \"event-out\",\n                onClick: () => {\n                  this.setState({\n                    selectedEvent: event,\n                    showEventJson: true\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: event.type === \"in\" ? \"arrow-down\" : \"arrow-up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 33\n                }, this), \"\\xA0\\xA0\", event.name, event.events.length > 1 ? ` (${event.events.length})` : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"tooltip\",\n                  children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                    id: \"jsonDisplay\",\n                    children: event.events.map(e => {\n                      return JSON.stringify(e, null, 2);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 36\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(Modal, {\n              onDismiss: () => this.setState({\n                showEventJson: false\n              }),\n              visible: this.state.showEventJson,\n              header: \"Event details\",\n              size: \"medium\",\n              footer: /*#__PURE__*/_jsxDEV(Box, {\n                float: \"right\",\n                children: /*#__PURE__*/_jsxDEV(SpaceBetween, {\n                  direction: \"horizontal\",\n                  size: \"xs\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    onClick: () => this.setState({\n                      showEventJson: false\n                    }),\n                    children: \"Close\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 578,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 33\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"eventdetail\",\n                children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                  id: \"jsonDisplay\",\n                  children: this.state.selectedEvent && this.state.selectedEvent.events.map(e => {\n                    const eventType = Object.keys(e === null || e === void 0 ? void 0 : e.event)[0];\n                    if (eventType === \"audioInput\" || eventType === \"audioOutput\") e.event[eventType].content = e.event[eventType].content.substr(0, 10) + \"...\";\n                    const ts = new Date(e.timestamp).toLocaleString(undefined, {\n                      year: \"numeric\",\n                      month: \"2-digit\",\n                      day: \"2-digit\",\n                      hour: \"2-digit\",\n                      minute: \"2-digit\",\n                      second: \"2-digit\",\n                      fractionalSecondDigits: 3,\n                      // Show milliseconds\n                      hour12: false // 24-hour format\n                    });\n                    var displayJson = {\n                      ...e\n                    };\n                    delete displayJson.timestamp;\n                    return ts + \"\\n\" + JSON.stringify(displayJson, null, 2) + \"\\n\";\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              onDismiss: () => this.setState({\n                showConfig: false\n              }),\n              visible: this.state.showConfig,\n              header: \"Nova S2S settings\",\n              size: \"large\",\n              footer: /*#__PURE__*/_jsxDEV(Box, {\n                float: \"right\",\n                children: /*#__PURE__*/_jsxDEV(SpaceBetween, {\n                  direction: \"horizontal\",\n                  size: \"xs\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    onClick: () => this.setState({\n                      showConfig: false\n                    }),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 614,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 33\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"config\",\n                children: [/*#__PURE__*/_jsxDEV(FormField, {\n                  label: \"Voice Id\",\n                  stretch: true,\n                  children: /*#__PURE__*/_jsxDEV(Select, {\n                    selectedOption: this.state.configVoiceIdOption,\n                    onChange: ({\n                      detail\n                    }) => this.setState({\n                      configVoiceIdOption: detail.selectedOption\n                    }),\n                    options: [{\n                      label: \"Matthew (en-US)\",\n                      value: \"matthew\"\n                    }, {\n                      label: \"Tiffany (en-US)\",\n                      value: \"tiffany\"\n                    }, {\n                      label: \"Amy (en-GB)\",\n                      value: \"amy\"\n                    }]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  label: \"System prompt\",\n                  description: \"For the speech model\",\n                  stretch: true,\n                  children: /*#__PURE__*/_jsxDEV(Textarea, {\n                    onChange: ({\n                      detail\n                    }) => this.setState({\n                      configSystemPrompt: detail.value\n                    }),\n                    value: this.state.configSystemPrompt,\n                    placeholder: \"Speech system prompt\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  label: \"Tool use configuration\",\n                  description: \"For external integration such as RAG and Agents\",\n                  stretch: true,\n                  children: /*#__PURE__*/_jsxDEV(Textarea, {\n                    onChange: ({\n                      detail\n                    }) => this.setState({\n                      configToolUse: detail.value\n                    }),\n                    value: this.state.configToolUse,\n                    rows: 10,\n                    placeholder: \"{}\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 654,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormField, {\n                  label: \"Chat history\",\n                  description: \"Sample chat history to resume conversation\",\n                  stretch: true,\n                  children: /*#__PURE__*/_jsxDEV(Textarea, {\n                    onChange: ({\n                      detail\n                    }) => this.setState({\n                      configChatHistory: detail.value\n                    }),\n                    value: this.state.configChatHistory,\n                    rows: 15,\n                    placeholder: \"{}\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 667,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default S2sChatBot;","map":{"version":3,"names":["React","createRef","Icon","Alert","Button","Modal","Box","SpaceBetween","Container","ColumnLayout","Header","FormField","Select","Textarea","Checkbox","S2sEvent","base64LPCM","jsxDEV","_jsxDEV","S2sChatBot","Component","constructor","props","handleSessionChange","e","customPrompt","localStorage","getItem","DEFAULT_PROMPT","DEFAULT_SYSTEM_PROMPT","trim","slice","state","sessionStarted","endSession","cancelAudio","setState","configSystemPrompt","chatMessages","events","eventsByContentName","startSession","status","alert","showEventJson","showConfig","selectedEvent","audioResponse","audioChunks","audioInputIndex","audioPlayPromise","includeChatHistory","configAudioInput","configAudioOutput","DEFAULT_AUDIO_OUTPUT_CONFIG","configVoiceIdOption","label","value","configToolUse","JSON","stringify","DEFAULT_TOOL_CONFIG","configChatHistory","DEFAULT_CHAT_HISTORY","socket","mediaRecorder","chatMessagesEndRef","audioPlayerRef","audioQueue","promptName","textContentName","audioContentName","componentDidMount","componentDidUpdate","prevProps","prevState","length","_this$chatMessagesEnd","current","scrollIntoView","behavior","sendEvent","event","readyState","WebSocket","OPEN","send","timestamp","Date","now","displayEvent","pause","currentTime","isPlaying","err","console","log","audioEnqueue","audioUrl","push","playNext","shift","src","load","play","catch","onended","error","handleIncomingMessage","message","eventType","Object","keys","role","content","contentId","stopReason","contentType","type","startsWith","evt","parse","interrupted","hasOwnProperty","raw","undefined","generationStage","contentStart","additionalModelFields","_JSON$parse","eventName","key","ts","contentName","audioOutput","substr","exists","i","item","name","unshift","connectWebSocket","process","env","REACT_APP_WEBSOCKET_URL","onopen","crypto","randomUUID","sessionStart","audioConfig","voiceId","toolConfig","promptStart","contentStartText","textInput","contentEnd","chatHistory","chat","chatHistoryContentName","contentStartAudio","onmessage","data","onerror","onclose","startMicrophone","stream","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","audioContext","window","AudioContext","webkitAudioContext","latencyHint","source","createMediaStreamSource","processor","createScriptProcessor","connect","destination","targetSampleRate","onaudioprocess","inputBuffer","offlineContext","OfflineAudioContext","numberOfChannels","Math","ceil","duration","sampleRate","offlineSource","createBufferSource","monoBuffer","createBuffer","copyToChannel","getChannelData","buffer","start","renderedBuffer","startRendering","resampled","ArrayBuffer","pcmData","DataView","s","max","min","setInt16","binary","byteLength","String","fromCharCode","getUint8","audioInput","btoa","audioCleanup","disconnect","getTracks","forEach","track","stop","MediaRecorder","ondataavailable","onstop","audioBlob","Blob","promptEnd","sessionEnd","close","render","className","children","statusIconAriaLabel","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","checked","onChange","detail","ref","columns","header","map","index","msg","class","id","onDismiss","visible","size","footer","float","direction","toLocaleString","year","month","day","hour","minute","second","fractionalSecondDigits","hour12","displayJson","stretch","selectedOption","options","description","placeholder","rows"],"sources":["/Users/jonathanfox/Desktop/amazon-nova-samples/speech-to-speech/workshops/react-client/src/s2s.js"],"sourcesContent":["import React, { createRef } from 'react';\nimport './s2s.css'\nimport { Icon, Alert, Button, Modal, Box, SpaceBetween, Container, ColumnLayout, Header, FormField, Select, Textarea, Checkbox } from '@cloudscape-design/components';\nimport S2sEvent from './helper/s2sEvents';\nimport {base64LPCM} from './helper/audioHelper';\n\nclass S2sChatBot extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: \"loading\", // null, loading, loaded\n            alert: null,\n            sessionStarted: false,\n            showEventJson: false,\n            showConfig: false,\n            selectedEvent: null,\n\n            chatMessages: {},\n            events: [],\n            audioResponse: [],\n            eventsByContentName: [],\n            audioChunks: [],\n            audioInputIndex: 0,\n            audioPlayPromise: null,\n            includeChatHistory: false,\n\n            // S2S config items\n            configAudioInput: null,\n            configSystemPrompt: S2sEvent.DEFAULT_SYSTEM_PROMPT,\n            configAudioOutput: S2sEvent.DEFAULT_AUDIO_OUTPUT_CONFIG,\n            configVoiceIdOption: { label: \"Matthew (en-US)\", value: \"matthew\" },\n            configToolUse: JSON.stringify(S2sEvent.DEFAULT_TOOL_CONFIG, null, 2),\n            configChatHistory: JSON.stringify(S2sEvent.DEFAULT_CHAT_HISTORY, null, 2),\n        };\n        this.socket = null;\n        this.mediaRecorder = null;\n        //this.audioQueue = new AudioQueue();\n        this.chatMessagesEndRef = React.createRef();\n        this.audioPlayerRef = createRef();\n        this.audioQueue = [];\n\n        this.promptName = null;\n        this.textContentName = null;\n        this.audioContentName = null;\n    }\n\n    componentDidMount() {\n        //this.connectWebSocket();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.chatMessages.length !== this.state.chatMessages.length) {\n            this.chatMessagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n        }\n    }\n    \n    sendEvent(event) {\n        if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n            this.socket.send(JSON.stringify(event));\n            event.timestamp = Date.now();\n            this.displayEvent(event, \"out\");\n        }\n    }\n    \n    cancelAudio() {\n        try {\n            if (this.audioPlayerRef.current && this.state.audioPlayPromise) {\n                this.audioPlayerRef.current.pause();\n                this.audioPlayerRef.current.currentTime = 0;\n                //this.audioPlayerRef.current.removeAttribute('src');\n                this.setState({audioPlayPromise: null});\n              }\n              this.audioQueue = []\n              this.setState({\n                isPlaying: false,\n              });\n        }\n        catch(err) {\n            console.log(err);\n        }\n    }\n\n    audioEnqueue(audioUrl) {\n        this.audioQueue.push(audioUrl);\n        if (!this.state.isPlaying) {\n            this.playNext();\n        }\n    }\n\n    playNext() {\n        try{\n            if (this.isPlaying || this.audioQueue.length === 0) return;\n        \n            if (this.audioPlayerRef.current && this.audioQueue.length > 0) {\n                let audioUrl  = this.audioQueue.shift();\n                this.setState({ isPlaying: true});\n\n                try {\n                    this.audioPlayerRef.current.src = audioUrl;\n                    this.audioPlayerRef.current.load();  // Reload the audio element to apply the new src\n                    this.setState({audioPlayPromise: this.audioPlayerRef.current.play().catch((err) => {})}); \n                }\n                catch(err) {\n                    console.log(err);\n                }\n                \n                // Wait for the audio to finish, then play the next one\n                this.audioPlayerRef.current.onended = () => {\n                    this.setState({ isPlaying: false});\n                    this.playNext();\n                };\n            }\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n    handleIncomingMessage (message) {\n        const eventType = Object.keys(message?.event)[0];\n        const role = message.event[eventType][\"role\"];\n        const content = message.event[eventType][\"content\"];\n        const contentId = message.event[eventType].contentId;\n        let stopReason = message.event[eventType].stopReason;\n        const contentType = message.event[eventType].type;\n        var chatMessages = this.state.chatMessages;\n        var audioResponse = this.state.audioResponse;\n\n        switch(eventType) {\n            case \"textOutput\": \n                // Detect interruption\n                if (role === \"ASSISTANT\" && content.startsWith(\"{\")) {\n                    const evt = JSON.parse(content);\n                    if (evt.interrupted === true) {\n                        this.cancelAudio()\n                    }\n                }\n\n                if (chatMessages.hasOwnProperty(contentId)) {\n                    chatMessages[contentId].content = content;\n                    chatMessages[contentId].role = role;\n                    if (chatMessages[contentId].raw === undefined)\n                        chatMessages[contentId].raw = [];\n                    chatMessages[contentId].raw.push(message);\n                }\n                this.setState({chatMessages: chatMessages});\n                break;\n            case \"audioOutput\":\n                audioResponse[contentId] += message.event[eventType].content;\n                this.setState({audioResponse: audioResponse});\n                //this.state.audioResponse[contentId] += message.event[eventType].content;\n                break;\n            case \"contentStart\":\n                if (contentType === \"AUDIO\") {\n                    audioResponse[contentId] = \"\";\n                    this.setState({audioResponse: audioResponse});\n                }\n                else if (contentType === \"TEXT\") {\n                    var generationStage = \"\";\n                    if (message.event.contentStart.additionalModelFields) {\n                        generationStage = JSON.parse(message.event.contentStart.additionalModelFields)?.generationStage;\n                    }\n\n                    chatMessages[contentId] =  {\n                        \"content\": \"\", \n                        \"role\": role,\n                        \"generationStage\": generationStage,\n                        \"raw\": [],\n                    };\n                    chatMessages[contentId].raw.push(message);\n                    this.setState({chatMessages: chatMessages});\n                }\n                break;\n            case \"contentEnd\":\n                if (contentType === \"AUDIO\") {\n                    var audioUrl = base64LPCM(this.state.audioResponse[contentId]);\n                    this.audioEnqueue(audioUrl);\n                    //this.audioQueue.enqueue(audioUrl);\n                }\n                else if (contentType === \"TEXT\"){\n                    if (chatMessages.hasOwnProperty(contentId)) {\n                        if (chatMessages[contentId].raw === undefined)\n                            chatMessages[contentId].raw = [];\n                        chatMessages[contentId].raw.push(message);\n                        chatMessages[contentId].stopReason = stopReason;\n                    }\n                    this.setState({chatMessages: chatMessages});\n\n                }\n                break;\n            default:\n                break;\n\n        }\n\n        this.displayEvent(message, \"in\");\n    }\n\n    displayEvent(event, type) {\n        if (event && event.event) {\n            const eventName = Object.keys(event?.event)[0];\n            let key = null;\n            let ts = Date.now();\n            let interrupted = false;\n            const contentType = event.event[eventName].type;\n            const contentName = event.event[eventName].contentName;\n            const contentId = event.event[eventName].contentId;\n\n            if (eventName === \"audioOutput\") {\n                key = `${eventName}-${contentId}`;\n                // truncate event audio content\n                event.event.audioOutput.content = event.event.audioOutput.content.substr(0,10);\n            }\n            else if (eventName === \"audioInput\") {\n                key = `${eventName}-${contentName}-${this.state.audioInputIndex}`;\n            }\n            else if (eventName === \"contentStart\" || eventName === \"textInput\" || eventName === \"contentEnd\") {\n                key = `${eventName}}-${contentName}-${contentType}`;\n                if (type === \"in\" && event.event[eventName].type === \"AUDIO\") {\n                    this.setState({audioInputIndex: this.state.audioInputIndex + 1});\n                }\n                else if(type === \"out\") {\n                    key = `${eventName}-${contentName}-${contentType}-${ts}`;\n                }\n            }\n            else if(eventName === \"textOutput\") {\n                const role = event.event[eventName].role;\n                const content = event.event[eventName].content;\n                if (role === \"ASSISTANT\" && content.startsWith(\"{\")) {\n                    const evt = JSON.parse(content);\n                    interrupted = evt.interrupted === true;\n                }\n                key = `${eventName}-${ts}`;\n            }\n            else {\n                key = `${eventName}-${ts}`;\n            }\n\n            let eventsByContentName = this.state.eventsByContentName;\n            if (eventsByContentName === null)\n                eventsByContentName = [];\n\n            let exists = false;\n            for(var i=0;i<eventsByContentName.length;i++) {\n                var item = eventsByContentName[i];\n                if (item.key === key && item.type === type) {\n                    item.events.push(event);\n\n                    item.interrupted = interrupted;\n                    exists = true;\n                    break;\n                }\n            }\n            if (!exists) {\n                const item = {\n                    key: key, \n                    name: eventName, \n                    type: type, \n                    events: [event], \n                    ts: ts,\n                };\n                eventsByContentName.unshift(item);\n            }\n            this.setState({eventsByContentName: eventsByContentName});\n        }\n    }\n\n    handleSessionChange = e => {\n        let customPrompt = localStorage.getItem('carelink_summary');\n        // Fallback to default if summary is missing, empty, or too long\n        const DEFAULT_PROMPT = S2sEvent.DEFAULT_SYSTEM_PROMPT;\n        if (customPrompt && typeof customPrompt === 'string') {\n            customPrompt = customPrompt.trim().slice(0, 1000); // Limit length\n        }\n        if (!customPrompt) {\n            customPrompt = DEFAULT_PROMPT;\n        }\n        if (this.state.sessionStarted) {\n            this.endSession();\n            this.cancelAudio();\n            this.setState({sessionStarted: false});\n        } else {\n            this.setState(\n                { configSystemPrompt: customPrompt, chatMessages:[], events: [], eventsByContentName: [] },\n                () => {\n                    this.startSession();\n                    this.setState({sessionStarted: true});\n                }\n            );\n        }\n    }\n\n    connectWebSocket() {\n        // Connect to the S2S WebSocket server\n        if (this.socket === null || this.socket.readyState !== WebSocket.OPEN) {\n            this.socket = new WebSocket(process.env.REACT_APP_WEBSOCKET_URL);\n        \n            this.socket.onopen = () => {\n                console.log(\"WebSocket connected!\");\n                this.promptName = crypto.randomUUID();\n                this.textContentName = crypto.randomUUID();\n                this.audioContentName = crypto.randomUUID();        \n    \n                // Start session events\n                this.sendEvent(S2sEvent.sessionStart());\n\n                var audioConfig = S2sEvent.DEFAULT_AUDIO_OUTPUT_CONFIG;\n                audioConfig.voiceId = this.state.configVoiceIdOption.value;\n                var toolConfig = this.state.configToolUse?JSON.parse(this.state.configToolUse):S2sEvent.DEFAULT_TOOL_CONFIG;\n\n                this.sendEvent(S2sEvent.promptStart(this.promptName, audioConfig, toolConfig));\n\n                this.sendEvent(S2sEvent.contentStartText(this.promptName, this.textContentName));\n\n                this.sendEvent(S2sEvent.textInput(this.promptName, this.textContentName, this.state.configSystemPrompt));\n                this.sendEvent(S2sEvent.contentEnd(this.promptName, this.textContentName));\n\n                // Chat history\n                if (this.state.includeChatHistory) {\n                    var chatHistory = JSON.parse(this.state.configChatHistory);\n                    if (chatHistory === null) chatHistory = S2sEvent.DEFAULT_CHAT_HISTORY;\n                    for (const chat of chatHistory) {\n                        const chatHistoryContentName = crypto.randomUUID();\n                        this.sendEvent(S2sEvent.contentStartText(this.promptName, chatHistoryContentName, chat.role));\n                        this.sendEvent(S2sEvent.textInput(this.promptName, chatHistoryContentName, chat.content));\n                        this.sendEvent(S2sEvent.contentEnd(this.promptName, chatHistoryContentName));\n                    }\n                    \n                }\n\n                this.sendEvent(S2sEvent.contentStartAudio(this.promptName, this.audioContentName));\n              };\n\n            // Handle incoming messages\n            this.socket.onmessage = (message) => {\n                const event = JSON.parse(message.data);\n                this.handleIncomingMessage(event);\n            };\n        \n            // Handle errors\n            this.socket.onerror = (error) => {\n                this.setState({alert: \"WebSocket Error: \", error});\n                console.error(\"WebSocket Error: \", error);\n            };\n        \n            // Handle connection close\n            this.socket.onclose = () => {\n                console.log(\"WebSocket Disconnected\");\n                if (this.state.sessionStarted)\n                    this.setState({alert: \"WebSocket Disconnected\"});\n            };\n        }\n    }\n\n    startSession() {\n        // Init S2sSessionManager\n        try {\n            if (this.socket === null || this.socket.readyState !== WebSocket.OPEN) {\n                this.connectWebSocket();\n            }\n\n            // Start microphone \n            this.startMicrophone();\n\n        } catch (error) {\n            console.error('Error accessing microphone: ', error);\n        }\n    }\n      \n    async startMicrophone() {\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({\n                audio: {\n                    echoCancellation: true,\n                    noiseSuppression: true,\n                    autoGainControl: true\n                }\n            });\n    \n            const audioContext = new (window.AudioContext || window.webkitAudioContext)({\n                latencyHint: 'interactive'\n            });\n    \n            const source = audioContext.createMediaStreamSource(stream);\n            const processor = audioContext.createScriptProcessor(512, 1, 1);\n    \n            source.connect(processor);\n            processor.connect(audioContext.destination);\n    \n            const targetSampleRate = 16000;\n    \n            processor.onaudioprocess = async (e) => {\n                if (this.state.sessionStarted) {\n                    const inputBuffer = e.inputBuffer;\n    \n                    // Create an offline context for resampling\n                    const offlineContext = new OfflineAudioContext({\n                        numberOfChannels: 1,\n                        length: Math.ceil(inputBuffer.duration * targetSampleRate),\n                        sampleRate: targetSampleRate\n                    });\n    \n                    // Copy input to offline context buffer\n                    const offlineSource = offlineContext.createBufferSource();\n                    const monoBuffer = offlineContext.createBuffer(1, inputBuffer.length, inputBuffer.sampleRate);\n                    monoBuffer.copyToChannel(inputBuffer.getChannelData(0), 0);\n    \n                    offlineSource.buffer = monoBuffer;\n                    offlineSource.connect(offlineContext.destination);\n                    offlineSource.start(0);\n    \n                    // Resample and get the rendered buffer\n                    const renderedBuffer = await offlineContext.startRendering();\n                    const resampled = renderedBuffer.getChannelData(0);\n    \n                    // Convert to Int16 PCM\n                    const buffer = new ArrayBuffer(resampled.length * 2);\n                    const pcmData = new DataView(buffer);\n    \n                    for (let i = 0; i < resampled.length; i++) {\n                        const s = Math.max(-1, Math.min(1, resampled[i]));\n                        pcmData.setInt16(i * 2, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n                    }\n    \n                    // Convert to binary string and base64 encode\n                    let binary = '';\n                    for (let i = 0; i < pcmData.byteLength; i++) {\n                        binary += String.fromCharCode(pcmData.getUint8(i));\n                    }\n    \n                    const event = S2sEvent.audioInput(\n                        this.promptName,\n                        this.audioContentName,\n                        btoa(binary)\n                    );\n                    this.sendEvent(event);\n                }\n            };\n    \n            window.audioCleanup = () => {\n                processor.disconnect();\n                source.disconnect();\n                stream.getTracks().forEach(track => track.stop());\n            };\n    \n            this.mediaRecorder = new MediaRecorder(stream);\n            this.mediaRecorder.ondataavailable = (event) => {\n                this.state.audioChunks.push(event.data);\n            };\n            this.mediaRecorder.onstop = () => {\n                const audioBlob = new Blob(this.state.audioChunks, { type: 'audio/webm' });\n                this.sendEvent(S2sEvent.audioInput(this.promptName, this.audioContentName, btoa(audioBlob)));\n                this.setState({ audioChunks: [] });\n            };\n    \n            this.mediaRecorder.start();\n            this.setState({ sessionStarted: true });\n            console.log('Microphone recording started');\n    \n        } catch (error) {\n            console.error('Error accessing microphone: ', error);\n        }\n    }\n    \n    \n\n    endSession() {\n        if (this.socket) {\n            // Close microphone\n            if (this.mediaRecorder && this.state.sessionStarted) {\n                this.mediaRecorder.stop();\n                console.log('Microphone recording stopped');\n            }\n\n            // Close S2sSessionManager\n            this.sendEvent(S2sEvent.contentEnd(this.promptName, this.audioContentName));\n            this.sendEvent(S2sEvent.promptEnd(this.promptName));\n            this.sendEvent(S2sEvent.sessionEnd());\n\n            // Close websocket\n            this.socket.close();\n\n            this.setState({\n                sessionStarted: false,\n            });\n\n        }\n  \n    }\n    render() {\n        return (\n            <div className=\"s2s\">\n                {this.state.alert !== null && this.state.alert.length > 0?\n                <div><Alert statusIconAriaLabel=\"Warning\" type=\"warning\">\n                {this.state.alert}\n                </Alert><br/></div>:<div/>}\n                <div className='top'>\n                    <div className='action'>\n                        <Button variant='primary' onClick={this.handleSessionChange}>\n                            <Icon name={this.state.sessionStarted?\"microphone-off\":\"microphone\"} />&nbsp;&nbsp;\n                            {this.state.sessionStarted?\"End Conversation\":\"Start Conversation\"}\n                        </Button>\n                        <div className='chathistory'>\n                            <Checkbox checked={this.state.includeChatHistory} onChange={({ detail }) => this.setState({includeChatHistory: detail.checked})}>Include chat history</Checkbox>\n                            <div className='desc'>You can view sample chat history in the settings.</div>\n                        </div>\n                        <audio ref={this.audioPlayerRef}></audio>\n                    </div>\n                    <div className='setting'>\n                        <Button onClick={()=> \n                            this.setState({\n                                showConfig: true, \n                            })\n                        }>\n                            <Icon name=\"settings\"/>\n                        </Button>\n                        \n                    </div>\n                </div>\n                <br/>\n                <ColumnLayout columns={2}>\n                    <Container header={\n                        <Header variant=\"h2\">Conversation</Header>\n                    }>\n                    <div className=\"chatarea\">\n                        {Object.keys(this.state.chatMessages).map((key,index) => {\n                            const msg = this.state.chatMessages[key];\n                            //if (msg.stopReason === \"END_TURN\" || msg.role === \"USER\")\n                                return <div className='item'>\n                                    <div className={msg.role === \"USER\"?\"user\":\"bot\"} onClick={()=> \n                                            this.setState({\n                                                showEventJson: true, \n                                                selectedEvent: {events:msg.raw}\n                                            })\n                                        }>\n                                        <Icon name={msg.role === \"USER\"?\"user-profile\":\"gen-ai\"} />&nbsp;&nbsp;\n                                        {msg.content}\n                                        {msg.role === \"ASSISTANT\" && msg.generationStage? ` [${msg.generationStage}]`:\"\"}\n                                    </div>\n                                </div>\n                        })}\n                        <div className='endbar' ref={this.chatMessagesEndRef}></div>\n                    </div>\n                    </Container>\n                    <Container header={\n                        <Header variant=\"h2\">Events</Header>\n                    }>\n                    <div className='events'>\n                        {this.state.eventsByContentName.map(event=>{\n                            return <div className={\n                                    event.name === \"toolUse\"? \"event-tool\": \n                                    event.interrupted === true?\"event-int\":\n                                    event.type === \"in\"?\"event-in\":\"event-out\"\n                                } \n                                onClick={() => {\n                                    this.setState({selectedEvent: event, showEventJson: true});\n                                }}\n                                >\n                                <Icon name={event.type === \"in\"? \"arrow-down\": \"arrow-up\"} />&nbsp;&nbsp;\n                                {event.name}\n                                {event.events.length > 1? ` (${event.events.length})`: \"\"}\n                                <div class=\"tooltip\">\n                                    <pre id=\"jsonDisplay\">{event.events.map(e=>{\n                                        return JSON.stringify(e,null,2);\n                                    })\n                                }</pre>\n                                </div>\n                            </div>\n                        })}\n                        <Modal\n                            onDismiss={() => this.setState({showEventJson: false})}\n                            visible={this.state.showEventJson}\n                            header=\"Event details\"\n                            size='medium'\n                            footer={\n                                <Box float=\"right\">\n                                <SpaceBetween direction=\"horizontal\" size=\"xs\">\n                                    <Button variant=\"link\" onClick={() => this.setState({showEventJson: false})}>Close</Button>\n                                </SpaceBetween>\n                                </Box>\n                            }\n                        >\n                            <div className='eventdetail'>\n                            <pre id=\"jsonDisplay\">\n                                {this.state.selectedEvent && this.state.selectedEvent.events.map(e=>{\n                                    const eventType = Object.keys(e?.event)[0];\n                                    if (eventType === \"audioInput\" || eventType === \"audioOutput\")\n                                        e.event[eventType].content = e.event[eventType].content.substr(0,10) + \"...\";\n                                    const ts = new Date(e.timestamp).toLocaleString(undefined, {\n                                        year: \"numeric\",\n                                        month: \"2-digit\",\n                                        day: \"2-digit\",\n                                        hour: \"2-digit\",\n                                        minute: \"2-digit\",\n                                        second: \"2-digit\",\n                                        fractionalSecondDigits: 3, // Show milliseconds\n                                        hour12: false // 24-hour format\n                                    });\n                                    var displayJson = { ...e };\n                                    delete displayJson.timestamp;\n                                    return ts + \"\\n\" + JSON.stringify(displayJson,null,2) + \"\\n\";\n                                })}\n                            </pre>\n                            </div>\n                        </Modal>\n                        <Modal\n                            onDismiss={() => this.setState({showConfig: false})}\n                            visible={this.state.showConfig}\n                            header=\"Nova S2S settings\"\n                            size='large'\n                            footer={\n                                <Box float=\"right\">\n                                <SpaceBetween direction=\"horizontal\" size=\"xs\">\n                                    <Button variant=\"link\" onClick={() => this.setState({showConfig: false})}>Save</Button>\n                                </SpaceBetween>\n                                </Box>\n                            }\n                        >\n                            <div className='config'>\n                                <FormField\n                                    label=\"Voice Id\"\n                                    stretch={true}\n                                >\n                                    <Select\n                                        selectedOption={this.state.configVoiceIdOption}\n                                        onChange={({ detail }) =>\n                                            this.setState({configVoiceIdOption: detail.selectedOption})\n                                        }\n                                        options={[\n                                            { label: \"Matthew (en-US)\", value: \"matthew\" },\n                                            { label: \"Tiffany (en-US)\", value: \"tiffany\" },\n                                            { label: \"Amy (en-GB)\", value: \"amy\" },\n                                        ]}\n                                        />\n                                </FormField>\n                                <br/>\n                                <FormField\n                                    label=\"System prompt\"\n                                    description=\"For the speech model\"\n                                    stretch={true}\n                                >\n                                    <Textarea\n                                        onChange={({ detail }) => this.setState({configSystemPrompt: detail.value})}\n                                        value={this.state.configSystemPrompt}\n                                        placeholder=\"Speech system prompt\"\n                                    />\n                                </FormField>\n                                <br/>\n                                <FormField\n                                    label=\"Tool use configuration\"\n                                    description=\"For external integration such as RAG and Agents\"\n                                    stretch={true}\n                                >\n                                    <Textarea\n                                        onChange={({ detail }) => this.setState({configToolUse: detail.value})}\n                                        value={this.state.configToolUse}\n                                        rows={10}\n                                        placeholder=\"{}\"\n                                    />\n                                </FormField>\n                                        <br/>\n                                <FormField\n                                    label=\"Chat history\"\n                                    description=\"Sample chat history to resume conversation\"\n                                    stretch={true}\n                                >\n                                    <Textarea\n                                        onChange={({ detail }) => this.setState({configChatHistory: detail.value})}\n                                        value={this.state.configChatHistory}\n                                        rows={15}\n                                        placeholder=\"{}\"\n                                    />\n                                </FormField>\n                            </div>\n                        </Modal>\n                    </div>\n                    </Container>\n                </ColumnLayout>\n            </div>\n        );\n    }\n}\n\nexport default S2sChatBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}