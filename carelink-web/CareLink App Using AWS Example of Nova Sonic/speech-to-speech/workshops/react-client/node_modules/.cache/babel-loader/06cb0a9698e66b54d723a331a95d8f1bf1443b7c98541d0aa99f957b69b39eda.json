{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport { getIsRtl, getLogicalBoundingClientRect, getScrollInlineStart, Portal } from '@cloudscape-design/component-toolkit/internal';\nimport styles from './styles.css.js';\nexport default function PortalOverlay({\n  track,\n  isDisabled,\n  children\n}) {\n  const ref = useRef(null);\n  useEffect(() => {\n    if (track === null || isDisabled) {\n      return;\n    }\n    let cleanedUp = false;\n    let lastX;\n    let lastY;\n    let lastInlineSize;\n    let lastBlockSize;\n    const updateElement = () => {\n      if (ref.current) {\n        const isRtl = getIsRtl(ref.current);\n        const {\n          insetInlineStart,\n          insetBlockStart,\n          inlineSize,\n          blockSize\n        } = getLogicalBoundingClientRect(track);\n        // For simplicity, we just make all our calculations independent of\n        // the browser's scrolling edge. When it comes to applying the changes,\n        // translate is independent of writing direction, so we need to invert\n        // the X coordinate ourselves just before applying the values.\n        const newX = (insetInlineStart + getScrollInlineStart(document.documentElement)) * (isRtl ? -1 : 1);\n        const newY = insetBlockStart + document.documentElement.scrollTop;\n        if (lastX !== newX || lastY !== newY) {\n          ref.current.style.translate = `${newX}px ${newY}px`;\n          lastX = newX;\n          lastY = newY;\n        }\n        if (lastInlineSize !== inlineSize || lastBlockSize !== blockSize) {\n          ref.current.style.width = `${inlineSize}px`;\n          ref.current.style.height = `${blockSize}px`;\n          lastInlineSize = inlineSize;\n          lastBlockSize = blockSize;\n        }\n      }\n      if (!cleanedUp) {\n        requestAnimationFrame(updateElement);\n      }\n    };\n    updateElement();\n    return () => {\n      cleanedUp = true;\n    };\n  }, [isDisabled, track]);\n  if (track === null) {\n    return null;\n  }\n  return React.createElement(Portal, null, React.createElement(\"span\", {\n    ref: ref,\n    className: styles['portal-overlay']\n  }, React.createElement(\"span\", {\n    className: styles['portal-overlay-contents']\n  }, children)));\n}","map":{"version":3,"names":["React","useEffect","useRef","getIsRtl","getLogicalBoundingClientRect","getScrollInlineStart","Portal","styles","PortalOverlay","track","isDisabled","children","ref","cleanedUp","lastX","lastY","lastInlineSize","lastBlockSize","updateElement","current","isRtl","insetInlineStart","insetBlockStart","inlineSize","blockSize","newX","document","documentElement","newY","scrollTop","style","translate","width","height","requestAnimationFrame","createElement","className"],"sources":["/Users/jonathanfox/Desktop/amazon-nova-samples/speech-to-speech/workshops/react-client/node_modules/src/internal/components/drag-handle-wrapper/portal-overlay.tsx"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\n\nimport {\n  getIsRtl,\n  getLogicalBoundingClientRect,\n  getScrollInlineStart,\n  Portal,\n} from '@cloudscape-design/component-toolkit/internal';\n\nimport styles from './styles.css.js';\n\nexport default function PortalOverlay({\n  track,\n  isDisabled,\n  children,\n}: {\n  track: HTMLElement | null;\n  isDisabled: boolean;\n  children: React.ReactNode;\n}) {\n  const ref = useRef<HTMLSpanElement | null>(null);\n\n  useEffect(() => {\n    if (track === null || isDisabled) {\n      return;\n    }\n\n    let cleanedUp = false;\n    let lastX: number | undefined;\n    let lastY: number | undefined;\n    let lastInlineSize: number | undefined;\n    let lastBlockSize: number | undefined;\n    const updateElement = () => {\n      if (ref.current) {\n        const isRtl = getIsRtl(ref.current);\n        const { insetInlineStart, insetBlockStart, inlineSize, blockSize } = getLogicalBoundingClientRect(track);\n        // For simplicity, we just make all our calculations independent of\n        // the browser's scrolling edge. When it comes to applying the changes,\n        // translate is independent of writing direction, so we need to invert\n        // the X coordinate ourselves just before applying the values.\n        const newX = (insetInlineStart + getScrollInlineStart(document.documentElement)) * (isRtl ? -1 : 1);\n        const newY = insetBlockStart + document.documentElement.scrollTop;\n        if (lastX !== newX || lastY !== newY) {\n          ref.current.style.translate = `${newX}px ${newY}px`;\n          lastX = newX;\n          lastY = newY;\n        }\n        if (lastInlineSize !== inlineSize || lastBlockSize !== blockSize) {\n          ref.current.style.width = `${inlineSize}px`;\n          ref.current.style.height = `${blockSize}px`;\n          lastInlineSize = inlineSize;\n          lastBlockSize = blockSize;\n        }\n      }\n      if (!cleanedUp) {\n        requestAnimationFrame(updateElement);\n      }\n    };\n    updateElement();\n\n    return () => {\n      cleanedUp = true;\n    };\n  }, [isDisabled, track]);\n\n  if (track === null) {\n    return null;\n  }\n\n  return (\n    <Portal>\n      <span ref={ref} className={styles['portal-overlay']}>\n        <span className={styles['portal-overlay-contents']}>{children}</span>\n      </span>\n    </Portal>\n  );\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAEhD,SACEC,QAAQ,EACRC,4BAA4B,EAC5BC,oBAAoB,EACpBC,MAAM,QACD,+CAA+C;AAEtD,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,eAAc,SAAUC,aAAaA,CAAC;EACpCC,KAAK;EACLC,UAAU;EACVC;AAAQ,CAKT;EACC,MAAMC,GAAG,GAAGV,MAAM,CAAyB,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAK;IACb,IAAIQ,KAAK,KAAK,IAAI,IAAIC,UAAU,EAAE;MAChC;;IAGF,IAAIG,SAAS,GAAG,KAAK;IACrB,IAAIC,KAAyB;IAC7B,IAAIC,KAAyB;IAC7B,IAAIC,cAAkC;IACtC,IAAIC,aAAiC;IACrC,MAAMC,aAAa,GAAGA,CAAA,KAAK;MACzB,IAAIN,GAAG,CAACO,OAAO,EAAE;QACf,MAAMC,KAAK,GAAGjB,QAAQ,CAACS,GAAG,CAACO,OAAO,CAAC;QACnC,MAAM;UAAEE,gBAAgB;UAAEC,eAAe;UAAEC,UAAU;UAAEC;QAAS,CAAE,GAAGpB,4BAA4B,CAACK,KAAK,CAAC;QACxG;QACA;QACA;QACA;QACA,MAAMgB,IAAI,GAAG,CAACJ,gBAAgB,GAAGhB,oBAAoB,CAACqB,QAAQ,CAACC,eAAe,CAAC,KAAKP,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACnG,MAAMQ,IAAI,GAAGN,eAAe,GAAGI,QAAQ,CAACC,eAAe,CAACE,SAAS;QACjE,IAAIf,KAAK,KAAKW,IAAI,IAAIV,KAAK,KAAKa,IAAI,EAAE;UACpChB,GAAG,CAACO,OAAO,CAACW,KAAK,CAACC,SAAS,GAAG,GAAGN,IAAI,MAAMG,IAAI,IAAI;UACnDd,KAAK,GAAGW,IAAI;UACZV,KAAK,GAAGa,IAAI;;QAEd,IAAIZ,cAAc,KAAKO,UAAU,IAAIN,aAAa,KAAKO,SAAS,EAAE;UAChEZ,GAAG,CAACO,OAAO,CAACW,KAAK,CAACE,KAAK,GAAG,GAAGT,UAAU,IAAI;UAC3CX,GAAG,CAACO,OAAO,CAACW,KAAK,CAACG,MAAM,GAAG,GAAGT,SAAS,IAAI;UAC3CR,cAAc,GAAGO,UAAU;UAC3BN,aAAa,GAAGO,SAAS;;;MAG7B,IAAI,CAACX,SAAS,EAAE;QACdqB,qBAAqB,CAAChB,aAAa,CAAC;;IAExC,CAAC;IACDA,aAAa,EAAE;IAEf,OAAO,MAAK;MACVL,SAAS,GAAG,IAAI;IAClB,CAAC;EACH,CAAC,EAAE,CAACH,UAAU,EAAED,KAAK,CAAC,CAAC;EAEvB,IAAIA,KAAK,KAAK,IAAI,EAAE;IAClB,OAAO,IAAI;;EAGb,OACET,KAAA,CAAAmC,aAAA,CAAC7B,MAAM,QACLN,KAAA,CAAAmC,aAAA;IAAMvB,GAAG,EAAEA,GAAG;IAAEwB,SAAS,EAAE7B,MAAM,CAAC,gBAAgB;EAAC,GACjDP,KAAA,CAAAmC,aAAA;IAAMC,SAAS,EAAE7B,MAAM,CAAC,yBAAyB;EAAC,GAAGI,QAAQ,CAAQ,CAChE,CACA;AAEb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}